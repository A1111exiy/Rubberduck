<UserControl x:Class="Rubberduck.UI.CodeExplorer.CodeExplorerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:codeExplorer="clr-namespace:Rubberduck.Navigation.CodeExplorer"
             xmlns:controls="clr-namespace:Rubberduck.UI.Controls"
             xmlns:converters="clr-namespace:Rubberduck.UI.Converters"
             ResxExtension.DefaultResxName="Rubberduck.Resources.CodeExplorer.CodeExplorerUI" 
             Language="{UICulture}"
             Name="CodeExplorer"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" d:DataContext="{d:DesignInstance codeExplorer:CodeExplorerViewModel}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Controls/ToolBar.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <CollectionViewSource x:Key="BuiltInTemplatesViewSource" x:Name="BuiltInTemplatesView" Source="{Binding BuiltInTemplates}" />

            <BitmapImage x:Key="RefreshImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/arrow-circle-double.png" />
            <BitmapImage x:Key="CollapseNodesImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/folder.png" />
            <BitmapImage x:Key="ExpandNodesImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/folder-open.png" />
            <BitmapImage x:Key="PrintImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/printer.png" />
            <BitmapImage x:Key="AddMdiFormImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Custom/PNG/AddMdiForm.png" />
            <BitmapImage x:Key="AddTestModuleImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Custom/PNG/ListOfTests.png" />
            <BitmapImage x:Key="AddStdModuleImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Custom/PNG/AddModule.png" />
            <BitmapImage x:Key="AddClassModuleImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Custom/PNG/AddClass.png" />
            <BitmapImage x:Key="AddUserControlImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Custom/PNG/AddUserControl.png" />
            <BitmapImage x:Key="AddPropertyPageImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Custom/PNG/AddPropertyPage.png" />
            <BitmapImage x:Key="AddUserDocumentImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Custom/PNG/AddUserDocument.png" />
            <BitmapImage x:Key="AddUserFormImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Custom/PNG/AddForm.png" />
            <BitmapImage x:Key="OpenDesignerImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Custom/PNG/ProjectForm.png" />
            <BitmapImage x:Key="AddModuleImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/plus-circle.png" />
            <BitmapImage x:Key="FindImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/magnifier--arrow.png" />
            <BitmapImage x:Key="RemoveImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/minus-circle.png" />
            <BitmapImage x:Key="SortImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/edit-list-order.png" />
            <BitmapImage x:Key="ShowSignaturesImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Custom/PNG/DisplayFullSignature.png" />
            <BitmapImage x:Key="CopyResultsImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/document-copy.png" />
            <BitmapImage x:Key="AddRemoveReferencesImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/node-select-all.png" />
            <BitmapImage x:Key="SyncImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Custom/PNG/SyncArrows.png" />
            <BitmapImage x:Key="FontSizeImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/edit-size.png" />
           
            <converters:BooleanToNullableDoubleConverter x:Key="BoolToDouble" />
            <converters:BoolToHiddenVisibilityConverter x:Key="BoolToHiddenVisibility" />
            <converters:BooleanToDimmedBrushConverter x:Key="BooleanToDimmed" />
            <converters:TemplateCommandParameterToTupleConverter x:Key="TemplateCommandParameterToTuple" />
            <converters:SearchImageSourceConverter x:Key="SearchToIcon" />

            <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFD9F4FF" Offset="0"/>
                <GradientStop Color="#FF9BDDFB" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="{x:Static SystemColors.ControlBrushKey}" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFEEEDED" Offset="0"/>
                <GradientStop Color="#FFDDDDDD" Offset="1"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />

            <Style x:Key="ShinyTreeView" TargetType="{x:Type TreeViewItem}">
                <Setter Property="BorderThickness" Value="1.5"/>
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                <Setter Property="Visibility" Value="{Binding IsVisible, Mode=OneWay, Converter={StaticResource BoolToVisibility}}" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <EventSetter Event="MouseDoubleClick" Handler="TreeView_OnMouseDoubleClick" />
                <EventSetter Event="MouseRightButtonDown" Handler="TreeView_OnMouseRightButtonDown" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="BorderBrush" Value="#adc6e5"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsSelected" Value="True"/>
                            <Condition Property="IsSelectionActive" Value="False"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="BorderBrush" Value="LightGray"/>
                    </MultiTrigger>
                </Style.Triggers>
                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="2"/>
                    </Style>
                </Style.Resources>
            </Style>

            <Style x:Key="ToolbarIconStyle" TargetType="Image">
                <Setter Property="Height" Value="16" />
                <Setter Property="Width" Value="16" />
                <Setter Property="Margin" Value="2,0,2,0" />
                <Setter Property="VerticalAlignment" Value="Top" />
            </Style>

            <Style x:Key="TreeViewItemStyle" TargetType="TextBlock">
                <Setter Property="Text" Value="{Binding Name}" />
                <Setter Property="FontSize" Value="{Binding ElementName=CodeExplorer.DataContext, Path=FontSize, Mode=OneWay}" />
                <Setter Property="FontWeight" Value="{Binding FontWeight}"/>
                <Setter Property="Margin" Value="2,0,2,0" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                <Setter Property="ToolTipService.InitialShowDelay" Value="500" />
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                <Setter Property="Foreground" Value="{Binding IsDimmed, Mode=OneWay, Converter={StaticResource BooleanToDimmed}}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsObsolete}" Value="true">
                        <Setter Property="Foreground" Value="Gray" />
                        <Setter Property="TextDecorations" Value="Strikethrough" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="TreeViewItemStyleWithSignatures" TargetType="TextBlock">
                <Setter Property="Text" Value="{Binding NameWithSignature}" />
                <Setter Property="FontSize" Value="{Binding ElementName=CodeExplorer.DataContext, Path=FontSize, Mode=OneWay}" />
                <Setter Property="FontWeight" Value="{Binding FontWeight}"/>
                <Setter Property="Margin" Value="2,0,2,0" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                <Setter Property="ToolTipService.InitialShowDelay" Value="500" />
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                <Setter Property="Foreground" Value="{Binding IsDimmed, Mode=OneWay, Converter={StaticResource BooleanToDimmed}}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsObsolete}" Value="true">
                        <Setter Property="Foreground" Value="Gray" />
                        <Setter Property="TextDecorations" Value="Strikethrough" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="TreeViewIconStyle" TargetType="Image" BasedOn="{StaticResource ToolbarIconStyle}">
                <Setter Property="Source" Value="{Binding CollapsedIcon}" />
                <Style.Triggers>
                    <!-- thanks to H.B. on http://stackoverflow.com/a/5797323/1188513 -->
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=IsExpanded}" Value="True">
                        <Setter Property="Source" Value="{Binding ExpandedIcon}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="PlaceHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Grid>
                                <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                         x:Name="textSource" 
                                         Background="Transparent" 
                                         Panel.ZIndex="2" />
                                <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="Foreground" Value="Transparent"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                    <Setter Property="Foreground" Value="LightGray"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Margin" Value="0" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <CompositeCollection x:Key="SortOptions">
                <MenuItem Name="SortByName"
                          Style="{DynamicResource MenuItemStyle}" VerticalAlignment="Center" 
                          Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_SortStyle_ByName}"
                          IsChecked="{Binding SortByName, UpdateSourceTrigger=PropertyChanged}" 
                          Command="{Binding SetNameSortCommand}"
                          CommandParameter="{Binding ElementName=SortByName, Path=IsChecked}"
                          IsCheckable="True" />
                <MenuItem Name="SortByCodeOrder"
                          Style="{DynamicResource MenuItemStyle}" VerticalAlignment="Center" 
                          Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_SortStyle_ByCodeOrder}"
                          IsChecked="{Binding SortByCodeOrder, UpdateSourceTrigger=PropertyChanged}" 
                          Command="{Binding SetCodeOrderSortCommand}"
                          CommandParameter="{Binding ElementName=SortByCodeOrder, Path=IsChecked}"
                          IsCheckable="True" />
                <Separator />
                <MenuItem Style="{DynamicResource MenuItemStyle}" VerticalAlignment="Center" 
                          Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_SortStyle_ByType}"
                          IsChecked="{Binding GroupByType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                          IsCheckable="True" />
            </CompositeCollection>

            <CompositeCollection x:Key="AddModuleCommands">
                <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_AddVBFormText}"
                                  Command="{Binding AddVBFormCommand}"
                                  CommandParameter="{Binding SelectedItem}"
                                  Visibility="{Binding VB6Visibility}">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource AddTestModuleImage}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_AddMDIFormText}"
                                  Command="{Binding AddMDIFormCommand}"
                                  CommandParameter="{Binding SelectedItem}"
                                  Visibility="{Binding VB6Visibility}">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource AddMdiFormImage}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_AddFormText}"
                                  Command="{Binding AddUserFormCommand}"
                                  CommandParameter="{Binding SelectedItem}"
                                  Visibility="{Binding VBAVisibility}">
                    <MenuItem.Icon>
                        <Image  Source="{StaticResource AddUserFormImage}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_AddStdModuleText}"
                                  Command="{Binding AddStdModuleCommand}"
                                  CommandParameter="{Binding SelectedItem}">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource AddStdModuleImage}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_AddClassModuleText}"
                                  Command="{Binding AddClassModuleCommand}"
                                  CommandParameter="{Binding SelectedItem}">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource AddClassModuleImage}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_AddUserControlText}"
                                  Command="{Binding AddUserControlCommand}"
                                  CommandParameter="{Binding SelectedItem}"
                                  Visibility="{Binding VB6Visibility}">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource AddUserControlImage}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_AddPropertyPageText}"
                                  Command="{Binding AddPropertyPageCommand}"
                                  CommandParameter="{Binding SelectedItem}"
                                  Visibility="{Binding VB6Visibility}">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource AddPropertyPageImage}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_AddUserDocumentText}"
                                  Command="{Binding AddUserDocumentCommand}"
                                  CommandParameter="{Binding SelectedItem}"
                                  Visibility="{Binding VB6Visibility}">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource AddUserDocumentImage}" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_AddTestModuleText}"
                                  Command="{Binding AddTestModuleCommand}"
                                  CommandParameter="{Binding SelectedItem}">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource AddTestModuleImage}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_AddTestModuleWithStubsText}"
                                  Command="{Binding AddTestModuleWithStubsCommand}"
                                  CommandParameter="{Binding SelectedItem}">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource AddTestModuleImage}" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_AddTemplatesSubMenu}" IsEnabled="{Binding AnyTemplatesCanExecute}">
                    <MenuItem.ItemsSource>
                        <CompositeCollection>
                            <CollectionContainer Collection="{Binding Source={StaticResource BuiltInTemplatesViewSource}}" />
                        </CompositeCollection>
                    </MenuItem.ItemsSource>
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Command" Value="{Binding DataContext.AddTemplateCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                            <Setter Property="Header" Value="{Binding Caption}" />
                            <Setter Property="ToolTip" Value="{Binding Description}" />
                            <Setter Property="CommandParameter">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource TemplateCommandParameterToTuple}">
                                        <Binding Path="Name" />
                                        <Binding Path="DataContext.SelectedItem" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                    <MenuItem.Icon>
                        <Image Height="16" Source="{StaticResource AddClassModuleImage}" />
                    </MenuItem.Icon>
                </MenuItem>
            </CompositeCollection>

            <HierarchicalDataTemplate x:Key="CodeExplorerTemplate" 
                                  DataType="codeExplorer:CodeExplorerProjectViewModel"
                                  ItemsSource="{Binding Items}">
                <StackPanel Orientation="Horizontal">
                    <Image Style="{StaticResource TreeViewIconStyle}" />
                    <TextBlock Style="{StaticResource TreeViewItemStyle}"
                               Visibility="{Binding ElementName=DisplaySignatures, Path=IsChecked, Converter={StaticResource BoolToHiddenVisibility}}" />
                    <TextBlock Style="{StaticResource TreeViewItemStyleWithSignatures}"
                               Visibility="{Binding ElementName=DisplaySignatures, Path=IsChecked, Converter={StaticResource BoolToVisibility}}" />
                </StackPanel>
            </HierarchicalDataTemplate>

            <Style x:Key="CodeExplorerTreeViewStyle" TargetType="TreeView">
                <Setter Property="ItemTemplate" Value="{StaticResource CodeExplorerTemplate}" />
                <Setter Property="ItemsSource" Value="{Binding Projects, UpdateSourceTrigger=PropertyChanged}" />
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu DataContext="{Binding DataContext, Source={x:Reference CodeExplorer}}">
                            <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_Open}"
                                  FontWeight="Bold"
                                  Command="{Binding OpenCommand}"
                                  CommandParameter="{Binding SelectedItem}" />
                            <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_OpenDesigner}"
                                  Command="{Binding OpenDesignerCommand}"
                                  CommandParameter="{Binding SelectedItem}"
                                  Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                                <MenuItem.Icon>
                                    <Image Style="{StaticResource ToolbarIconStyle}" Source="{StaticResource OpenDesignerImage}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator />
                            <MenuItem Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=Refresh}"
                                  Command="{Binding RefreshCommand}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource RefreshImage}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=Rename}"
                                  Command="{Binding RenameCommand}"
                                  CommandParameter="{Binding SelectedItem}" />
                            <Separator />
                            <MenuItem Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=References_Caption}"
                                      Command="{Binding AddRemoveReferencesCommand}"
                                      CommandParameter="{Binding SelectedItem}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource AddRemoveReferencesImage}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_SetAsStartupProject}"
                                      Command="{Binding SetAsStartupProjectCommand}"
                                      CommandParameter="{Binding SelectedItem}"  
                                      Visibility="{Binding VB6Visibility}"/>
                            <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_OpenProjectProperties}"
                                  Command="{Binding OpenProjectPropertiesCommand}"
                                  CommandParameter="{Binding SelectedItem}" />
                            <Separator />
                            <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_AddModule}"
                                      ItemsSource="{StaticResource AddModuleCommands}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource AddModuleImage}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=Find}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource FindImage}" />
                                </MenuItem.Icon>
                                <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_FindAllReferencesText}"
                                  Command="{Binding FindAllReferencesCommand}"
                                  CommandParameter="{Binding SelectedItem}" />
                                <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_FindAllImplementationsText}"
                                  Command="{Binding FindAllImplementationsCommand}"
                                  CommandParameter="{Binding SelectedItem}" />
                            </MenuItem>
                            <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_Indent}"
                                  Command="{Binding IndenterCommand}"
                                  CommandParameter="{Binding SelectedItem}" />
                            <Separator />
                            <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_CollapseSubnodesToolTip}"
                                  Command="{Binding CollapseAllSubnodesCommand}"
                                  CommandParameter="{Binding SelectedItem}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource CollapseNodesImage}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_ExpandSubnodesToolTip}"
                                  Command="{Binding ExpandAllSubnodesCommand}"
                                  CommandParameter="{Binding SelectedItem}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource ExpandNodesImage}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator />
                            <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_Import}"
                                  Command="{Binding ImportCommand}"
                                  CommandParameter="{Binding SelectedItem}"
                                  Visibility="{Binding VBAVisibility}" />
                            <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_Export}"
                                  Command="{Binding ExportCommand}"
                                  CommandParameter="{Binding SelectedItem}"
                                  Visibility="{Binding ExportVisibility}" />
                            <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_ExportAll}"
                                  Command="{Binding ExportAllCommand}"
                                  CommandParameter="{Binding SelectedItem}" 
                                  Visibility="{Binding ExportAllVisibility}" />
                            <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_Remove}"
                                  Command="{Binding RemoveCommand}"
                                  CommandParameter="{Binding SelectedItem}"
                                  Visibility="{Binding VBAVisibility}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource RemoveImage}">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Style.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.5" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator Visibility="{Binding VBAVisibility}" />
                            <MenuItem Header="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_Print}"
                                  Command="{Binding PrintCommand}"
                                  CommandParameter="{Binding SelectedItem}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource PrintImage}">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Style.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.5" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FontSizeStyle" TargetType="Control">
                <Setter Property="FontSize" Value="{Binding ElementName=CodeExplorer.DataContext, Path=FontSize, Mode=OneWay}" />
            </Style>
            <Style x:Key="FooterStyle" TargetType="TextBox" BasedOn="{StaticResource FontSizeStyle}">
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="Margin" Value="4" />
                <Setter Property="TextWrapping" Value="WrapWithOverflow" />
                <Setter Property="Background" Value="WhiteSmoke" />
                <Setter Property="BorderThickness" Value="0" />
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid UseLayoutRounding="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*" MinHeight="64" />
            <RowDefinition Height="5"/>
            <RowDefinition Height="Auto" MinHeight="48"/>
        </Grid.RowDefinitions>

        <ToolBarTray Grid.Row="0" IsLocked="True">
            <ToolBar Style="{DynamicResource ToolBarWithOverflowOnlyShowingWhenNeededStyle}">
                <Button Command="{Binding RefreshCommand}">
                    <Image Source="{StaticResource RefreshImage}">
                        <Image.Style>
                            <Style BasedOn="{StaticResource ToolbarIconStyle}" TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled"  Value="False">
                                        <Setter Property="Opacity" Value="0.3" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Button.ToolTip>
                        <TextBlock Text="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=Refresh}" />
                    </Button.ToolTip>
                </Button>

                <Separator />

                <Menu Style="{StaticResource FontSizeStyle}" VerticalContentAlignment="Center" >
                    <MenuItem ItemsSource="{StaticResource AddModuleCommands}" VerticalContentAlignment="Center">
                        <MenuItem.Header>
                            <Image Style="{StaticResource ToolbarIconStyle}" Source="{StaticResource AddModuleImage}" Margin="0,3,0,0" />
                        </MenuItem.Header>
                        <MenuItem.ToolTip>
                            <TextBlock Text="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_Add}" />
                        </MenuItem.ToolTip>
                    </MenuItem>
                </Menu>

                <Separator />

                <Menu Style="{StaticResource FontSizeStyle}" VerticalContentAlignment="Center" >
                    <MenuItem ItemsSource="{StaticResource SortOptions}" VerticalContentAlignment="Center">
                        <MenuItem.Header>
                            <Image Style="{StaticResource ToolbarIconStyle}" Source="{StaticResource SortImage}" Margin="0,3,0,0" />
                        </MenuItem.Header>
                        <MenuItem.ToolTip>
                            <TextBlock Text="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_Sort}" />
                        </MenuItem.ToolTip>
                    </MenuItem>
                </Menu>

                <Separator />

                <ToggleButton Name="DisplaySignatures" ToolTip="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_ShowSignaturesToolTip}" IsChecked="True">
                    <Image Style="{StaticResource ToolbarIconStyle}" Source="{StaticResource ShowSignaturesImage}" />
                </ToggleButton>

                <Separator />

                <Button Command="{Binding OpenDesignerCommand}" CommandParameter="{Binding SelectedItem}">
                    <Image Source="{StaticResource OpenDesignerImage}">
                        <Image.Style>
                            <Style BasedOn="{StaticResource ToolbarIconStyle}" TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.3" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Button.ToolTip>
                        <TextBlock Text="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_ShowDesignerToolTip}" />
                    </Button.ToolTip>
                </Button>

                <Separator />

                <Button Command="{Binding SyncCodePaneCommand}">
                    <Image Source="{StaticResource SyncImage}">
                        <Image.Style>
                            <Style BasedOn="{StaticResource ToolbarIconStyle}" TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.3" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Button.ToolTip>
                        <TextBlock Text="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_SyncCodePaneToolTip}" />
                    </Button.ToolTip>
                </Button>

                <Separator />

                <Button Command="{Binding CopyResultsCommand}" CommandParameter="{Binding ElementName=ProjectTree}">
                    <Image Source="{StaticResource CopyResultsImage}">
                        <Image.Style>
                            <Style BasedOn="{StaticResource ToolbarIconStyle}" TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.3" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Button.ToolTip>
                        <TextBlock Text="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_CopyToolTip}" />
                    </Button.ToolTip>
                </Button>

                <Separator />

                <Menu VerticalContentAlignment="Center" >
                    <MenuItem>
                        <MenuItem.Header>
                            <Image Style="{StaticResource ToolbarIconStyle}" Source="{StaticResource FontSizeImage}" Margin="0,3,0,0" />
                        </MenuItem.Header>
                        <MenuItem.ToolTip>
                            <TextBlock Text="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_FontSizeToolTip}" />
                        </MenuItem.ToolTip>
                        <MenuItem.Items>
                            <MenuItem IsCheckable="True" Header="8" Style="{DynamicResource MenuItemStyle}">
                                <MenuItem.IsChecked>
                                    <Binding Path="FontSize" Converter="{StaticResource BoolToDouble}" Mode="OneWayToSource" ConverterParameter="8" />
                                </MenuItem.IsChecked>
                            </MenuItem>
                            <MenuItem IsCheckable="True" Header="10" Style="{DynamicResource MenuItemStyle}">
                                <MenuItem.IsChecked>
                                    <Binding Path="FontSize" Converter="{StaticResource BoolToDouble}" Mode="OneWayToSource" ConverterParameter="10" />
                                </MenuItem.IsChecked>
                            </MenuItem>
                            <MenuItem IsCheckable="True" Header="12" Style="{DynamicResource MenuItemStyle}">
                                <MenuItem.IsChecked>
                                    <Binding Path="FontSize" Converter="{StaticResource BoolToDouble}" Mode="OneWayToSource" ConverterParameter="12" />
                                </MenuItem.IsChecked>
                            </MenuItem>
                            <MenuItem IsCheckable="True" Header="14" Style="{DynamicResource MenuItemStyle}">
                                <MenuItem.IsChecked>
                                    <Binding Path="FontSize" Converter="{StaticResource BoolToDouble}" Mode="OneWayToSource" ConverterParameter="14" />
                                </MenuItem.IsChecked>
                            </MenuItem>
                            <MenuItem IsCheckable="True" Header="16" Style="{DynamicResource MenuItemStyle}">
                                <MenuItem.IsChecked>
                                    <Binding Path="FontSize" Converter="{StaticResource BoolToDouble}" Mode="OneWayToSource" ConverterParameter="16" />
                                </MenuItem.IsChecked>
                            </MenuItem>
                        </MenuItem.Items>
                        <i:Interaction.Behaviors>
                            <controls:MenuItemButtonGroupBehavior></controls:MenuItemButtonGroupBehavior>
                        </i:Interaction.Behaviors>
                    </MenuItem>
                </Menu>
            </ToolBar>
        </ToolBarTray>

        <Border Grid.Row="1"
                Background="{x:Static SystemColors.ControlBrush}"
                BorderBrush="{x:Static SystemColors.ActiveBorderBrush}" 
                BorderThickness="1" 
                Padding="2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <TextBox Name="SearchBox" Grid.Column="0" IsEnabled="{Binding CanSearch}">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource PlaceHolder}">
                            <Setter Property="Height" Value="20" />
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Tag" Value="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_SearchPlaceholder}" />
                            <Setter Property="Text" Value="{Binding FilterText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <Button Name="SearchButton" Grid.Column="1" Command="{Binding ClearFilterTextCommand}" IsEnabled="{Binding CanSearch}" 
                        BorderBrush="{x:Static SystemColors.ControlLightBrush}"
                        Background="Transparent"
                        Width="20" Height="20" Padding="0" Margin="0,1"
                        controls:EventFocusAttachment.ElementToFocus="{Binding ElementName=SearchBox}">
                    <Image Margin="2" Width="16" Height="16" Source="{Binding FilterText, Converter={StaticResource SearchToIcon}, UpdateSourceTrigger=PropertyChanged}" />
                </Button>
            </Grid>
        </Border>

        <controls:EmptyUIRefresh Grid.Row="2" />

        <TreeView x:Name="ProjectTree"
                  Grid.Row="2"
                  Background="White"
                  ItemContainerStyle="{StaticResource ShinyTreeView}"
                  HorizontalContentAlignment="Stretch"
                  Style="{StaticResource CodeExplorerTreeViewStyle}" BorderThickness="0,1"
                  VirtualizingPanel.IsVirtualizing="False"
                  Visibility="{Binding Path=TreeViewVisibility}">
            <i:Interaction.Behaviors>
                <controls:BindableSelectedItemBehavior SelectedItem="{Binding SelectedItem, Mode=TwoWay}" />
            </i:Interaction.Behaviors>
        </TreeView>

        <controls:BusyIndicator Grid.Row="2" Width="120" Height="120" Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibility}}" />

        <GridSplitter Grid.Row="3" Height="5" ShowsPreview="True" Cursor="SizeNS" HorizontalAlignment="Stretch"/>

        <Border Grid.Row="4" BorderThickness="0,1,0,0" BorderBrush="DimGray">

            <ScrollViewer Background="WhiteSmoke" VerticalScrollBarVisibility="Auto">
                <WrapPanel Orientation="Vertical" MinHeight="70" >

                    <Grid Margin="4" HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Image Style="{StaticResource ToolbarIconStyle}"
                               Source="{Binding SelectedItem.CollapsedIcon}" Grid.Column="0"/>
                        <TextBox Style="{StaticResource FooterStyle}"
                                 Text="{Binding PanelTitle, Mode=OneWay}"
                                 FontWeight="Bold"
                                 Grid.Column="1" />
                    </Grid>

                    <TextBox Style="{StaticResource FooterStyle}"
                             Text="{Binding Description, Mode=OneWay}" />

                    <WrapPanel>
                        <controls:LinkButton Margin="4"
                                             Visibility="{Binding CanExecuteIndenterCommand, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged}"
                                             Command="{Binding IndenterCommand}"
                                             CommandParameter="{Binding SelectedItem}"
                                             Content="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_Indent}"
                                             FontSize="{Binding FontSize, Mode=OneWay}" />
                        <controls:LinkButton Margin="4"
                                             Visibility="{Binding CanExecuteRenameCommand, Converter={StaticResource BoolToVisibility}}"
                                             Command="{Binding RenameCommand}"
                                             CommandParameter="{Binding SelectedItem}"
                                             Content="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_Rename}"
                                             FontSize="{Binding FontSize, Mode=OneWay}" />
                        <controls:LinkButton Margin="4"
                                             Visibility="{Binding CanExecuteFindAllReferencesCommand, Converter={StaticResource BoolToVisibility}}"
                                             Command="{Binding FindAllReferencesCommand}"
                                             CommandParameter="{Binding SelectedItem}"
                                             Content="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_FindAllReferencesText}"
                                             FontSize="{Binding FontSize, Mode=OneWay}" />
                    </WrapPanel>
                </WrapPanel>
            </ScrollViewer>
        </Border>
    </Grid>
</UserControl>