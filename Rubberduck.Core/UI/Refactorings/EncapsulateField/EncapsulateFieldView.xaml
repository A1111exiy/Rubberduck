<UserControl x:Class="Rubberduck.UI.Refactorings.EncapsulateField.EncapsulateFieldView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:Rubberduck.UI.Controls"
             xmlns:converters="clr-namespace:Rubberduck.UI.Converters"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d"
             d:DesignHeight="800"
             d:DesignWidth="800">
    <UserControl.Resources>
        <converters:BoolToHiddenVisibilityConverter x:Key="BoolToHiddenVisibility" />

        <BitmapImage x:Key="InvalidEntryImage"
                     UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/cross-circle.png" />

        <ControlTemplate x:Key="InvalidEntryAnnotation">
                <Image  Source="{StaticResource InvalidEntryImage}"
                        Height="16"
                        Margin="0,-10,-8,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Visibility="{Binding HasValidEncapsulationAttributes, Converter={StaticResource BoolToHiddenVisibility}}"/>
        </ControlTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="40" />
        </Grid.RowDefinitions>
        <StackPanel Background="White">
            <Label Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=EncapsulateField_TitleText}"
                   FontWeight="Bold" />
            <TextBlock Text="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=EncapsulateField_InstructionText}"
                       Margin="5,0" />
        </StackPanel>
        <!--<Grid Grid.Row="1"
              Margin="5,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid Margin="0,0,0,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="100" />
                </Grid.ColumnDefinitions>
                <Grid Margin="0,0,5,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0"
                          VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <CheckBox Grid.ColumnSpan="2"
                                  Content="Encapsulate with a User Defined Type"
                                  IsChecked="{Binding EncapsulateAsUDT, Mode=TwoWay}"
                                  FontWeight="Bold"
                                  Margin="0,10,0,0" />
                    </Grid>
                    <Grid Grid.Row="1"
                          Visibility="{Binding HideEncapsulateAsUDTFields, Converter={StaticResource BoolToHiddenVisibility}}"
                          VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0"
                                   Grid.Column="0"
                                   Margin="30,10,0,0">
                            User Defined Type Name:
                        </TextBlock>
                        <TextBox Grid.Row="0"
                                 Grid.Column="2"
                                 Margin="5,8,0,0"
                                 Height="22"
                                 VerticalAlignment="Top"
                                 VerticalContentAlignment="Center"
                                 Text="{Binding EncapsulateAsUDT_TypeIdentifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Grid.Row="1"
                                   Grid.Column="0"
                                   Margin="30,10,0,0">
                            User Defined Type Field Name:
                        </TextBlock>
                        <TextBox Grid.Row="1"
                                 Grid.Column="2"
                                 Margin="5,8,0,0"
                                 Height="22"
                                 VerticalAlignment="Top"
                                 VerticalContentAlignment="Center"
                                 Text="{Binding EncapsulateAsUDT_FieldName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                </Grid>
            </Grid>
        </Grid>-->
        <Grid Grid.Row="1"
              Margin="10,10,0,10"
              VerticalAlignment="Top">
            <Grid.RowDefinitions>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <CheckBox Grid.ColumnSpan="2"
                      Content="Encapsulate with a User Defined Type"
                      IsChecked="{Binding EncapsulateAsUDT, Mode=TwoWay}"
                      FontWeight="Bold"
                      Margin="0,10,0,0" />
        </Grid>
        <Grid Grid.Row="2"
              Visibility="{Binding HideEncapsulateAsUDTFields, Converter={StaticResource BoolToHiddenVisibility}}"
              VerticalAlignment="Top">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="200" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="0"
                       Grid.Column="0"
                       Margin="30,10,0,0">
                            User Defined Type Name:
            </TextBlock>
            <TextBox Grid.Row="0"
                     Grid.Column="1"
                     Margin="5,8,0,0"
                     Height="22"
                     VerticalAlignment="Top"
                     VerticalContentAlignment="Center"
                     Text="{Binding EncapsulateAsUDT_TypeIdentifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <TextBlock Grid.Row="1"
                       Grid.Column="0"
                       Margin="30,10,0,20">
                            User Defined Type Field Name:
            </TextBlock>
            <TextBox Grid.Row="1"
                     Grid.Column="1"
                     Margin="5,8,0,0"
                     Height="22"
                     VerticalAlignment="Top"
                     VerticalContentAlignment="Center"
                     Text="{Binding EncapsulateAsUDT_FieldName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </Grid>
        <Grid Grid.Row="3"
              Margin="5,0,0,10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="150" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="100" />
                </Grid.ColumnDefinitions>
                <ListBox Grid.Column="0"
                         Name="FieldList"
                         SelectedItem="{Binding SelectedValue, Mode=TwoWay}"
                         ItemsSource="{Binding EncapsulationFields}"
                         Height="200"
                         VerticalAlignment="Top"
                         Margin="5,0,0,5">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="5,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="200" />
                                    <ColumnDefinition Width="125" />
                                </Grid.ColumnDefinitions>
                                <CheckBox Content="{Binding TargetID}"
                                          IsChecked="{Binding EncapsulateFlag}"
                                          FontWeight="Bold"
                                          Command="{Binding Path=DataContext.EncapsulateFlagCommand, 
                                            RelativeSource={RelativeSource AncestorType=ListBox}}" />
                                <TextBlock Name="PropertyNameTextBlock"
                                           Grid.Column="1"
                                           Text="=>"
                                           Margin="2,0,0,0">
                                </TextBlock>
                                <TextBox Name="PropertyTextBox"
                                         Grid.Column="2"
                                         Margin="0,-2,0,0"
                                         Height="22"
                                         Text="{Binding PropertyName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="TextChanged">
                                            <i:InvokeCommandAction Command="{Binding Path=DataContext.PropertyChangeCommand,
                                                            RelativeSource={RelativeSource AncestorType=ListBox}}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>
                                <Control Grid.Column="2"
                                         Template="{StaticResource InvalidEntryAnnotation}" />
                                <CheckBox Grid.Column="3"
                                          Margin="10,0,0,0"
                                          Content="Read Only"
                                          HorizontalAlignment="Left"
                                          IsChecked="{Binding IsReadOnly, Mode=TwoWay}"
                                          IsEnabled="{Binding CanBeReadWrite}"
                                          Command="{Binding Path=DataContext.IsReadOnlyCommand, 
                                                    RelativeSource={RelativeSource AncestorType=ListBox}}" />
                                <!--<Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="200" />
                                        <ColumnDefinition Width="125" />
                                    </Grid.ColumnDefinitions>
                                    <CheckBox Content="{Binding TargetID}"
                                              IsChecked="{Binding EncapsulateFlag}"
                                              FontWeight="Bold"
                                              Command="{Binding Path=DataContext.EncapsulateFlagCommand, 
                                            RelativeSource={RelativeSource AncestorType=ListBox}}" />
                                    <TextBlock Name="PropertyNameTextBlock"
                                               Grid.Column="1"
                                               Text="=>"
                                               Margin="2,0,0,0">
                                    </TextBlock>
                                    <TextBox Name="PropertyTextBox"
                                             Grid.Column="2"
                                             Margin="0,-2,0,0"
                                             Height="22"
                                             Text="{Binding PropertyName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <i:InvokeCommandAction Command="{Binding Path=DataContext.PropertyChangeCommand,
                                                            RelativeSource={RelativeSource AncestorType=ListBox}}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <Control Grid.Column="2"
                                             Template="{StaticResource InvalidEntryAnnotation}" />
                                    <CheckBox Grid.Column="3"
                                              Margin="10,0,0,0"
                                              Content="Read Only"
                                              HorizontalAlignment="Left"
                                              IsChecked="{Binding IsReadOnly, Mode=TwoWay}"
                                              IsEnabled="{Binding CanBeReadWrite}"
                                              Command="{Binding Path=DataContext.IsReadOnlyCommand, 
                                                    RelativeSource={RelativeSource AncestorType=ListBox}}" />
                                </Grid>-->
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <StackPanel Grid.Column="1"
                            HorizontalAlignment="Right"
                            Margin="5,0,0,0"
                            MinWidth="100">
                    <Button Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=SelectAll_Button}"
                            Height="20"
                            Margin="0,0,0,5"
                            Padding="10,0"
                            Command="{Binding SelectAllCommand}" />
                    <Button Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=DeselectAll_Button}"
                            Height="20"
                            Margin="0"
                            Padding="10,0"
                            Command="{Binding DeselectAllCommand}">
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>
        <Grid Grid.Row="4"
              Margin="5,0">
            <controls:BindableTextEditor Margin="10,10,10,10"
                                         FontFamily="Courier New "
                                         ShowLineNumbers="False"
                                         HorizontalScrollBarVisibility="Auto"
                                         VerticalScrollBarVisibility="Auto"
                                         MinHeight="200"
                                         IsReadOnly="True"
                                         Text="{Binding PropertyPreview,Mode=OneWay}" />
        </Grid>
        <Grid Grid.Row="5"
              Background="{x:Static SystemColors.ControlDarkBrush}"
              Grid.IsSharedSizeScope="True">
            <Grid HorizontalAlignment="Right"
                  Margin="5,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="SettingsButtons" />
                    <ColumnDefinition SharedSizeGroup="SettingsButtons" />
                </Grid.ColumnDefinitions>
                <Button Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=OK}"
                        Grid.Column="0"
                        Height="20"
                        Margin="5,0"
                        Padding="10,0"
                        IsEnabled="{Binding HasValidNames}"
                        Command="{Binding OkButtonCommand}" />
                <Button Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=CancelButtonText}"
                        Grid.Column="1"
                        Height="20"
                        Margin="5,0"
                        Padding="10,0"
                        Command="{Binding CancelButtonCommand}">
                </Button>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
