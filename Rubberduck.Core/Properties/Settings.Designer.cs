//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rubberduck.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.9.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>M</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>false</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>IndentCurrentModuleCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_IndentCurrentModuleCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_IndentCurrentModuleCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\n          <CodeInspectionSettings xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-i" +
            "nstance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n            <CodeInspect" +
            "ions>\r\n              <CodeInspection Name=\"BooleanAssignedInIfElseInspection\" Se" +
            "verity=\"Warning\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n      " +
            "        <CodeInspection Name=\"ObsoleteErrorSyntaxInspection\" Severity=\"Suggestio" +
            "n\" InspectionType=\"LanguageOpportunities\" />\r\n              <CodeInspection Name" +
            "=\"StopKeywordInspection\" Severity=\"Suggestion\" InspectionType=\"CodeQualityIssues" +
            "\" />\r\n              <CodeInspection Name=\"UnhandledOnErrorResumeNextInspection\" " +
            "Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n              <CodeIns" +
            "pection Name=\"EmptyStringLiteralInspection\" Severity=\"Warning\" InspectionType=\"L" +
            "anguageOpportunities\" />\r\n              <CodeInspection Name=\"ImplicitByRefModif" +
            "ierInspection\" Severity=\"Hint\" InspectionType=\"CodeQualityIssues\" />\r\n          " +
            "    <CodeInspection Name=\"FunctionReturnValueNotUsedInspection\" Severity=\"Warnin" +
            "g\" InspectionType=\"CodeQualityIssues\" />\r\n              <CodeInspection Name=\"Il" +
            "legalAnnotationInspection\" Severity=\"Error\" InspectionType=\"RubberduckOpportunit" +
            "ies\" />\r\n              <CodeInspection Name=\"RedundantByRefModifierInspection\" S" +
            "everity=\"DoNotShow\" InspectionType=\"CodeQualityIssues\" />\r\n              <CodeIn" +
            "spection Name=\"MissingAttributeInspection\" Severity=\"Warning\" InspectionType=\"Ru" +
            "bberduckOpportunities\" />\r\n              <CodeInspection Name=\"AttributeOutOfSyn" +
            "cInspection\" Severity=\"Warning\" InspectionType=\"RubberduckOpportunities\" />\r\n   " +
            "           <CodeInspection Name=\"MissingAnnotationArgumentInspection\" Severity=\"" +
            "Error\" InspectionType=\"CodeQualityIssues\" />\r\n              <CodeInspection Name" +
            "=\"ModuleScopeDimKeywordInspection\" Severity=\"Suggestion\" InspectionType=\"Languag" +
            "eOpportunities\" />\r\n              <CodeInspection Name=\"MultilineParameterInspec" +
            "tion\" Severity=\"Suggestion\" InspectionType=\"MaintainabilityAndReadabilityIssues\"" +
            " />\r\n              <CodeInspection Name=\"MultipleDeclarationsInspection\" Severit" +
            "y=\"Warning\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n           " +
            "   <CodeInspection Name=\"ObsoleteCallStatementInspection\" Severity=\"Suggestion\" " +
            "InspectionType=\"LanguageOpportunities\" />\r\n              <CodeInspection Name=\"O" +
            "bsoleteCommentSyntaxInspection\" Severity=\"Suggestion\" InspectionType=\"LanguageOp" +
            "portunities\" />\r\n              <CodeInspection Name=\"ObsoleteLetStatementInspect" +
            "ion\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n          " +
            "    <CodeInspection Name=\"OptionBaseInspection\" Severity=\"Hint\" InspectionType=\"" +
            "MaintainabilityAndReadabilityIssues\" />\r\n              <CodeInspection Name=\"Red" +
            "undantOptionInspection\" Severity=\"Hint\" InspectionType=\"LanguageOpportunities\" /" +
            ">\r\n              <CodeInspection Name=\"OptionExplicitInspection\" Severity=\"Error" +
            "\" InspectionType=\"CodeQualityIssues\" />\r\n              <CodeInspection Name=\"Pro" +
            "cedureCanBeWrittenAsFunctionInspection\" Severity=\"Suggestion\" InspectionType=\"La" +
            "nguageOpportunities\" />\r\n              <CodeInspection Name=\"ApplicationWorkshee" +
            "tFunctionInspection\" Severity=\"Suggestion\" InspectionType=\"CodeQualityIssues\" />" +
            "\r\n              <CodeInspection Name=\"AssignedByValParameterInspection\" Severity" +
            "=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n              <CodeInspection " +
            "Name=\"EmptyModuleInspection\" Severity=\"Hint\" InspectionType=\"MaintainabilityAndR" +
            "eadabilityIssues\" />\r\n              <CodeInspection Name=\"LineLabelNotUsedInspec" +
            "tion\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n              <C" +
            "odeInspection Name=\"IntegerDataTypeInspection\" Severity=\"Hint\" InspectionType=\"C" +
            "odeQualityIssues\" />\r\n              <CodeInspection Name=\"ShadowedDeclarationIns" +
            "pection\" Severity=\"DoNotShow\" InspectionType=\"CodeQualityIssues\" />\r\n           " +
            "   <CodeInspection Name=\"ConstantNotUsedInspection\" Severity=\"Warning\" Inspectio" +
            "nType=\"CodeQualityIssues\" />\r\n              <CodeInspection Name=\"DefaultProject" +
            "NameInspection\" Severity=\"Suggestion\" InspectionType=\"MaintainabilityAndReadabil" +
            "ityIssues\" />\r\n              <CodeInspection Name=\"EmptyCaseBlockInspection\" Sev" +
            "erity=\"Warning\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n       " +
            "       <CodeInspection Name=\"EmptyDoWhileBlockInspection\" Severity=\"Suggestion\" " +
            "InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n              <CodeInsp" +
            "ection Name=\"EmptyElseBlockInspection\" Severity=\"Warning\" InspectionType=\"Mainta" +
            "inabilityAndReadabilityIssues\" />\r\n              <CodeInspection Name=\"EmptyForE" +
            "achBlockInspection\" Severity=\"Warning\" InspectionType=\"MaintainabilityAndReadabi" +
            "lityIssues\" />\r\n              <CodeInspection Name=\"EmptyForLoopBlockInspection\"" +
            " Severity=\"Warning\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n   " +
            "           <CodeInspection Name=\"EmptyIfBlockInspection\" Severity=\"Warning\" Insp" +
            "ectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n              <CodeInspecti" +
            "on Name=\"EmptyWhileWendBlockInspection\" Severity=\"Warning\" InspectionType=\"Maint" +
            "ainabilityAndReadabilityIssues\" />\r\n              <CodeInspection Name=\"Encapsul" +
            "atePublicFieldInspection\" Severity=\"Suggestion\" InspectionType=\"MaintainabilityA" +
            "ndReadabilityIssues\" />\r\n              <CodeInspection Name=\"HostSpecificExpress" +
            "ionInspection\" Severity=\"Warning\" InspectionType=\"LanguageOpportunities\" />\r\n   " +
            "           <CodeInspection Name=\"HungarianNotationInspection\" Severity=\"Suggesti" +
            "on\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n              <Code" +
            "Inspection Name=\"ImplicitActiveSheetReferenceInspection\" Severity=\"Warning\" Insp" +
            "ectionType=\"LanguageOpportunities\" />\r\n              <CodeInspection Name=\"Impli" +
            "citActiveWorkbookReferenceInspection\" Severity=\"Warning\" InspectionType=\"Languag" +
            "eOpportunities\" />\r\n              <CodeInspection Name=\"ImplicitDefaultMemberAss" +
            "ignmentInspection\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" " +
            "/>\r\n              <CodeInspection Name=\"ImplicitPublicMemberInspection\" Severity" +
            "=\"Hint\" InspectionType=\"LanguageOpportunities\" />\r\n              <CodeInspection" +
            " Name=\"ImplicitVariantReturnTypeInspection\" Severity=\"Hint\" InspectionType=\"Lang" +
            "uageOpportunities\" />\r\n              <CodeInspection Name=\"MemberNotOnInterfaceI" +
            "nspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n           " +
            "   <CodeInspection Name=\"MoveFieldCloserToUsageInspection\" Severity=\"Hint\" Inspe" +
            "ctionType=\"MaintainabilityAndReadabilityIssues\" />\r\n              <CodeInspectio" +
            "n Name=\"NonReturningFunctionInspection\" Severity=\"Error\" InspectionType=\"CodeQua" +
            "lityIssues\" />\r\n              <CodeInspection Name=\"ObjectVariableNotSetInspecti" +
            "on\" Severity=\"Error\" InspectionType=\"CodeQualityIssues\" />\r\n              <CodeI" +
            "nspection Name=\"ObsoleteGlobalInspection\" Severity=\"Suggestion\" InspectionType=\"" +
            "LanguageOpportunities\" />\r\n              <CodeInspection Name=\"ObsoleteTypeHintI" +
            "nspection\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n    " +
            "          <CodeInspection Name=\"ParameterCanBeByValInspection\" Severity=\"Suggest" +
            "ion\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n              <Cod" +
            "eInspection Name=\"ParameterNotUsedInspection\" Severity=\"Warning\" InspectionType=" +
            "\"CodeQualityIssues\" />\r\n              <CodeInspection Name=\"ProcedureNotUsedInsp" +
            "ection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n              " +
            "<CodeInspection Name=\"SelfAssignedDeclarationInspection\" Severity=\"Suggestion\" I" +
            "nspectionType=\"CodeQualityIssues\" />\r\n              <CodeInspection Name=\"Unassi" +
            "gnedVariableUsageInspection\" Severity=\"Error\" InspectionType=\"CodeQualityIssues\"" +
            " />\r\n              <CodeInspection Name=\"UndeclaredVariableInspection\" Severity=" +
            "\"Error\" InspectionType=\"CodeQualityIssues\" />\r\n              <CodeInspection Nam" +
            "e=\"UntypedFunctionUsageInspection\" Severity=\"Hint\" InspectionType=\"LanguageOppor" +
            "tunities\" />\r\n              <CodeInspection Name=\"UseMeaningfulNameInspection\" S" +
            "everity=\"Suggestion\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n  " +
            "            <CodeInspection Name=\"VariableNotAssignedInspection\" Severity=\"Warni" +
            "ng\" InspectionType=\"CodeQualityIssues\" />\r\n              <CodeInspection Name=\"V" +
            "ariableNotUsedInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" " +
            "/>\r\n              <CodeInspection Name=\"VariableTypeNotDeclaredInspection\" Sever" +
            "ity=\"Warning\" InspectionType=\"LanguageOpportunities\" />\r\n              <CodeInsp" +
            "ection Name=\"WriteOnlyPropertyInspection\" Severity=\"Suggestion\" InspectionType=\"" +
            "CodeQualityIssues\" />\r\n              <CodeInspection Name=\"DefTypeStatementInspe" +
            "ction\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n        " +
            "      <CodeInspection Name=\"StepIsNotSpecifiedInspection\" Severity=\"DoNotShow\" I" +
            "nspectionType=\"LanguageOpportunities\" />\r\n              <CodeInspection Name=\"St" +
            "epOneIsRedundantInspection\" Severity=\"Hint\" InspectionType=\"LanguageOpportunitie" +
            "s\" />\r\n              <CodeInspection Name=\"SheetAccessedUsingStringInspection\" S" +
            "everity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n              <C" +
            "odeInspection Name=\"ObsoleteMemberUsageInspection\" Severity=\"Warning\" Inspection" +
            "Type=\"MaintainabilityAndReadabilityIssues\" />\r\n              <CodeInspection Nam" +
            "e=\"ObsoleteCallingConventionInspection\" Severity=\"Warning\" InspectionType=\"CodeQ" +
            "ualityIssues\" />\r\n              <CodeInspection Name=\"DuplicatedAnnotationInspec" +
            "tion\" Severity=\"Error\" InspectionType=\"RubberduckOpportunities\" />\r\n            " +
            "  <CodeInspection Name=\"ModuleWithoutFolderInspection\" Severity=\"Suggestion\" Ins" +
            "pectionType=\"RubberduckOpportunities\" />\r\n              <CodeInspection Name=\"On" +
            "LocalErrorInspection\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportunitie" +
            "s\" />\r\n              <CodeInspection Name=\"IsMissingOnInappropriateArgumentInspe" +
            "ction\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n              <" +
            "CodeInspection Name=\"IsMissingWithNonArgumentParameterInspection\" Severity=\"Warn" +
            "ing\" InspectionType=\"CodeQualityIssues\" />\r\n              <CodeInspection Name=\"" +
            "AssignmentNotUsedInspection\" Severity=\"Suggestion\" InspectionType=\"CodeQualityIs" +
            "sues\" />\r\n              <CodeInspection Name=\"UnderscoreInPublicClassModuleMembe" +
            "rInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n         " +
            "     <CodeInspection Name=\"ExcelUdfNameIsValidCellReferenceInspection\" Severity=" +
            "\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n            </CodeInspections>\r" +
            "\n            <WhitelistedIdentifiers />\r\n            <RunInspectionsOnSuccessful" +
            "Parse>true</RunInspectionsOnSuccessfulParse>\r\n          </CodeInspectionSettings" +
            ">\r\n        ")]
        public string CodeInspectionSettings {
            get {
                return ((string)(this["CodeInspectionSettings"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
          <HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
            <Key1>R</Key1>
            <IsEnabled>true</IsEnabled>
            <HasShiftModifier>true</HasShiftModifier>
            <HasAltModifier>false</HasAltModifier>
            <HasCtrlModifier>true</HasCtrlModifier>
            <CommandTypeName>CodePaneRefactorRenameCommand</CommandTypeName>
          </HotkeySetting>
        ")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_CodePaneRefactorRenameCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_CodePaneRefactorRenameCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
          <HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
            <Key1>F</Key1>
            <IsEnabled>true</IsEnabled>
            <HasShiftModifier>true</HasShiftModifier>
            <HasAltModifier>false</HasAltModifier>
            <HasCtrlModifier>true</HasCtrlModifier>
            <CommandTypeName>RefactorEncapsulateFieldCommand</CommandTypeName>
          </HotkeySetting>
        ")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_RefactorEncapsulateFieldCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_RefactorEncapsulateFieldCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
          <HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
            <Key1>M</Key1>
            <IsEnabled>true</IsEnabled>
            <HasShiftModifier>true</HasShiftModifier>
            <HasAltModifier>false</HasAltModifier>
            <HasCtrlModifier>true</HasCtrlModifier>
            <CommandTypeName>RefactorExtractMethodCommand</CommandTypeName>
          </HotkeySetting>
        ")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_RefactorExtractMethodCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_RefactorExtractMethodCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
          <HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
            <Key1>C</Key1>
            <IsEnabled>true</IsEnabled>
            <HasShiftModifier>true</HasShiftModifier>
            <HasAltModifier>false</HasAltModifier>
            <HasCtrlModifier>true</HasCtrlModifier>
            <CommandTypeName>RefactorMoveCloserToUsageCommand</CommandTypeName>
          </HotkeySetting>
        ")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_RefactorMoveCloserToUsageCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_RefactorMoveCloserToUsageCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
          <HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
            <Key1>R</Key1>
            <IsEnabled>true</IsEnabled>
            <HasShiftModifier>false</HasShiftModifier>
            <HasAltModifier>false</HasAltModifier>
            <HasCtrlModifier>true</HasCtrlModifier>
            <CommandTypeName>CodeExplorerCommand</CommandTypeName>
          </HotkeySetting>
        ")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_CodeExplorerCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_CodeExplorerCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
          <HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
            <Key1>E</Key1>
            <IsEnabled>true</IsEnabled>
            <HasShiftModifier>true</HasShiftModifier>
            <HasAltModifier>false</HasAltModifier>
            <HasCtrlModifier>true</HasCtrlModifier>
            <CommandTypeName>ExportAllCommand</CommandTypeName>
          </HotkeySetting>
        ")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_ExportAllCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_ExportAllCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
          <HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
            <Key1>T</Key1>
            <IsEnabled>true</IsEnabled>
            <HasShiftModifier>false</HasShiftModifier>
            <HasAltModifier>false</HasAltModifier>
            <HasCtrlModifier>true</HasCtrlModifier>
            <CommandTypeName>FindSymbolCommand</CommandTypeName>
          </HotkeySetting>
        ")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_FindSymbolCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_FindSymbolCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
          <HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
            <Key1>P</Key1>
            <IsEnabled>true</IsEnabled>
            <HasShiftModifier>false</HasShiftModifier>
            <HasAltModifier>false</HasAltModifier>
            <HasCtrlModifier>true</HasCtrlModifier>
            <CommandTypeName>IndentCurrentProcedureCommand</CommandTypeName>
          </HotkeySetting>
        ")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_IndentCurrentProcedureCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_IndentCurrentProcedureCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
          <HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
            <Key1>I</Key1>
            <IsEnabled>true</IsEnabled>
            <HasShiftModifier>true</HasShiftModifier>
            <HasAltModifier>false</HasAltModifier>
            <HasCtrlModifier>true</HasCtrlModifier>
            <CommandTypeName>InspectionResultsCommand</CommandTypeName>
          </HotkeySetting>
        ")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_InspectionResultsCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_InspectionResultsCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
          <HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
            <Key1>`</Key1>
            <IsEnabled>true</IsEnabled>
            <HasShiftModifier>false</HasShiftModifier>
            <HasAltModifier>false</HasAltModifier>
            <HasCtrlModifier>true</HasCtrlModifier>
            <CommandTypeName>ReparseCommand</CommandTypeName>
          </HotkeySetting>
        ")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_ReparseCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_ReparseCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
          <HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
            <Key1>T</Key1>
            <IsEnabled>true</IsEnabled>
            <HasShiftModifier>true</HasShiftModifier>
            <HasAltModifier>false</HasAltModifier>
            <HasCtrlModifier>true</HasCtrlModifier>
            <CommandTypeName>TestExplorerCommand</CommandTypeName>
          </HotkeySetting>
        ")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_TestExplorerCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_TestExplorerCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\n          <ToDoMarker xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xml" +
            "ns:xsd=\"http://www.w3.org/2001/XMLSchema\" Text=\"TODO\" />\r\n        ")]
        public global::Rubberduck.Settings.ToDoMarker ToDoMarker_ToDo {
            get {
                return ((global::Rubberduck.Settings.ToDoMarker)(this["ToDoMarker_ToDo"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\n          <ToDoMarker xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xml" +
            "ns:xsd=\"http://www.w3.org/2001/XMLSchema\" Text=\"NOTE\" />\r\n        ")]
        public global::Rubberduck.Settings.ToDoMarker ToDoMarker_Note {
            get {
                return ((global::Rubberduck.Settings.ToDoMarker)(this["ToDoMarker_Note"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\n          <ToDoMarker xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xml" +
            "ns:xsd=\"http://www.w3.org/2001/XMLSchema\" Text=\"BUG\" />\r\n        ")]
        public global::Rubberduck.Settings.ToDoMarker ToDoMarker_Bug {
            get {
                return ((global::Rubberduck.Settings.ToDoMarker)(this["ToDoMarker_Bug"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
          <WindowSettings xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
            <CodeExplorerVisibleOnStartup>false</CodeExplorerVisibleOnStartup>
            <CodeInspectionsVisibleOnStartup>false</CodeInspectionsVisibleOnStartup>
            <TestExplorerVisibleOnStartup>false</TestExplorerVisibleOnStartup>
            <TodoExplorerVisibleOnStartup>false</TodoExplorerVisibleOnStartup>
            <CodeExplorer_SortByName>true</CodeExplorer_SortByName>
            <CodeExplorer_SortByCodeOrder>false</CodeExplorer_SortByCodeOrder>
            <CodeExplorer_GroupByType>false</CodeExplorer_GroupByType>
          </WindowSettings>
        ")]
        public global::Rubberduck.Settings.WindowSettings WindowSettings {
            get {
                return ((global::Rubberduck.Settings.WindowSettings)(this["WindowSettings"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
          <UnitTestSettings xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
            <BindingMode>LateBinding</BindingMode>
            <AssertMode>StrictAssert</AssertMode>
            <ModuleInit>true</ModuleInit>
            <MethodInit>true</MethodInit>
            <DefaultTestStubInNewModule>false</DefaultTestStubInNewModule>
          </UnitTestSettings>
        ")]
        public string UnitTestSettings {
            get {
                return ((string)(this["UnitTestSettings"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
          <GeneralSettings xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
            <Language Code=""en-US"" />
            <CanShowSplash>true</CanShowSplash>
            <CanCheckVersion>true</CanCheckVersion>
            <CompileBeforeParse>true</CompileBeforeParse>
            <IsSmartIndenterPrompted>false</IsSmartIndenterPrompted>
            <IsAutoSaveEnabled>false</IsAutoSaveEnabled>
            <AutoSavePeriod>10</AutoSavePeriod>
            <UserEditedLogLevel>false</UserEditedLogLevel>
            <MinimumLogLevel>0</MinimumLogLevel>
            <SetDpiUnaware>false</SetDpiUnaware>
            <EnableExperimentalFeatures />
          </GeneralSettings>
        ")]
        public global::Rubberduck.Settings.GeneralSettings GeneralSettings {
            get {
                return ((global::Rubberduck.Settings.GeneralSettings)(this["GeneralSettings"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
          <AutoCompleteSettings xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" IsEnabled=""false"">
            <SmartConcat IsEnabled=""false"">
              <ConcatVbNewLineModifier>None</ConcatVbNewLineModifier>
              <ConcatMaxLines>25</ConcatMaxLines>
            </SmartConcat>
            <SelfClosingPairs IsEnabled=""false"" />
            <BlockCompletion IsEnabled=""false"" CompleteOnEnter=""false"" CompleteOnTab=""false"" />
          </AutoCompleteSettings>
        ")]
        public global::Rubberduck.Settings.AutoCompleteSettings AutoCompleteSettings {
            get {
                return ((global::Rubberduck.Settings.AutoCompleteSettings)(this["AutoCompleteSettings"]));
            }
        }
    }
}
