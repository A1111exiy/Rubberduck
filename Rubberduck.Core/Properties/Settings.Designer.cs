//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rubberduck.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.8.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<CodeInspectionSettings xmlns:xsi=\"http:" +
            "//www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchem" +
            "a\">\r\n  <CodeInspections>\r\n    <CodeInspection Name=\"BooleanAssignedInIfElseInspe" +
            "ction\" Severity=\"Warning\" InspectionType=\"MaintainabilityAndReadabilityIssues\" /" +
            ">\r\n    <CodeInspection Name=\"ObsoleteErrorSyntaxInspection\" Severity=\"Suggestion" +
            "\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"StopKeywo" +
            "rdInspection\" Severity=\"Suggestion\" InspectionType=\"CodeQualityIssues\" />\r\n    <" +
            "CodeInspection Name=\"UnhandledOnErrorResumeNextInspection\" Severity=\"Warning\" In" +
            "spectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"EmptyStringLitera" +
            "lInspection\" Severity=\"Warning\" InspectionType=\"LanguageOpportunities\" />\r\n    <" +
            "CodeInspection Name=\"ImplicitByRefModifierInspection\" Severity=\"Hint\" Inspection" +
            "Type=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"FunctionReturnValueNotUse" +
            "dInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <Code" +
            "Inspection Name=\"IllegalAnnotationInspection\" Severity=\"Error\" InspectionType=\"R" +
            "ubberduckOpportunities\" />\r\n    <CodeInspection Name=\"RedundantByRefModifierInsp" +
            "ection\" Severity=\"DoNotShow\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeIns" +
            "pection Name=\"MissingAttributeInspection\" Severity=\"Warning\" InspectionType=\"Rub" +
            "berduckOpportunities\" />\r\n    <CodeInspection Name=\"MissingMemberAnnotationInspe" +
            "ction\" Severity=\"Suggestion\" InspectionType=\"RubberduckOpportunities\" />\r\n    <C" +
            "odeInspection Name=\"AttributeValueOutOfSyncInspection\" Severity=\"Warning\" Inspec" +
            "tionType=\"RubberduckOpportunities\" />\r\n    <CodeInspection Name=\"MissingAnnotati" +
            "onArgumentInspection\" Severity=\"Error\" InspectionType=\"CodeQualityIssues\" />\r\n  " +
            "  <CodeInspection Name=\"ModuleScopeDimKeywordInspection\" Severity=\"Suggestion\" I" +
            "nspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"MultilinePar" +
            "ameterInspection\" Severity=\"Suggestion\" InspectionType=\"MaintainabilityAndReadab" +
            "ilityIssues\" />\r\n    <CodeInspection Name=\"MultipleDeclarationsInspection\" Sever" +
            "ity=\"Warning\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <Code" +
            "Inspection Name=\"ObsoleteCallStatementInspection\" Severity=\"Suggestion\" Inspecti" +
            "onType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"ObsoleteCommentSynt" +
            "axInspection\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n " +
            "   <CodeInspection Name=\"ObsoleteLetStatementInspection\" Severity=\"Suggestion\" I" +
            "nspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"OptionBaseIn" +
            "spection\" Severity=\"Hint\" InspectionType=\"MaintainabilityAndReadabilityIssues\" /" +
            ">\r\n    <CodeInspection Name=\"RedundantOptionInspection\" Severity=\"Hint\" Inspecti" +
            "onType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"OptionExplicitInspe" +
            "ction\" Severity=\"Error\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspecti" +
            "on Name=\"ProcedureCanBeWrittenAsFunctionInspection\" Severity=\"Suggestion\" Inspec" +
            "tionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"ApplicationWorksh" +
            "eetFunctionInspection\" Severity=\"Suggestion\" InspectionType=\"CodeQualityIssues\" " +
            "/>\r\n    <CodeInspection Name=\"AssignedByValParameterInspection\" Severity=\"Warnin" +
            "g\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"EmptyModuleI" +
            "nspection\" Severity=\"Hint\" InspectionType=\"MaintainabilityAndReadabilityIssues\" " +
            "/>\r\n    <CodeInspection Name=\"LineLabelNotUsedInspection\" Severity=\"Warning\" Ins" +
            "pectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"IntegerDataTypeIns" +
            "pection\" Severity=\"Hint\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspect" +
            "ion Name=\"ShadowedDeclarationInspection\" Severity=\"DoNotShow\" InspectionType=\"Co" +
            "deQualityIssues\" />\r\n    <CodeInspection Name=\"ConstantNotUsedInspection\" Severi" +
            "ty=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"De" +
            "faultProjectNameInspection\" Severity=\"Suggestion\" InspectionType=\"Maintainabilit" +
            "yAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"EmptyCaseBlockInspection\" S" +
            "everity=\"Warning\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <" +
            "CodeInspection Name=\"EmptyDoWhileBlockInspection\" Severity=\"Suggestion\" Inspecti" +
            "onType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"Empty" +
            "ElseBlockInspection\" Severity=\"Warning\" InspectionType=\"MaintainabilityAndReadab" +
            "ilityIssues\" />\r\n    <CodeInspection Name=\"EmptyForEachBlockInspection\" Severity" +
            "=\"Warning\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeIns" +
            "pection Name=\"EmptyForLoopBlockInspection\" Severity=\"Warning\" InspectionType=\"Ma" +
            "intainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"EmptyIfBlockIns" +
            "pection\" Severity=\"Warning\" InspectionType=\"MaintainabilityAndReadabilityIssues\"" +
            " />\r\n    <CodeInspection Name=\"EmptyWhileWendBlockInspection\" Severity=\"Warning\"" +
            " InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Na" +
            "me=\"EncapsulatePublicFieldInspection\" Severity=\"Suggestion\" InspectionType=\"Main" +
            "tainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"HostSpecificExpre" +
            "ssionInspection\" Severity=\"Warning\" InspectionType=\"LanguageOpportunities\" />\r\n " +
            "   <CodeInspection Name=\"HungarianNotationInspection\" Severity=\"Suggestion\" Insp" +
            "ectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"I" +
            "mplicitActiveSheetReferenceInspection\" Severity=\"Warning\" InspectionType=\"Langua" +
            "geOpportunities\" />\r\n    <CodeInspection Name=\"ImplicitActiveWorkbookReferenceIn" +
            "spection\" Severity=\"Warning\" InspectionType=\"LanguageOpportunities\" />\r\n    <Cod" +
            "eInspection Name=\"ImplicitDefaultMemberAssignmentInspection\" Severity=\"Suggestio" +
            "n\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"Implicit" +
            "PublicMemberInspection\" Severity=\"Hint\" InspectionType=\"LanguageOpportunities\" /" +
            ">\r\n    <CodeInspection Name=\"ImplicitVariantReturnTypeInspection\" Severity=\"Hint" +
            "\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"MemberNot" +
            "OnInterfaceInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r" +
            "\n    <CodeInspection Name=\"MoveFieldCloserToUsageInspection\" Severity=\"Hint\" Ins" +
            "pectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"" +
            "NonReturningFunctionInspection\" Severity=\"Error\" InspectionType=\"CodeQualityIssu" +
            "es\" />\r\n    <CodeInspection Name=\"ObjectVariableNotSetInspection\" Severity=\"Erro" +
            "r\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"ObsoleteGlob" +
            "alInspection\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n " +
            "   <CodeInspection Name=\"ObsoleteTypeHintInspection\" Severity=\"Suggestion\" Inspe" +
            "ctionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"ParameterCanBeBy" +
            "ValInspection\" Severity=\"Suggestion\" InspectionType=\"MaintainabilityAndReadabili" +
            "tyIssues\" />\r\n    <CodeInspection Name=\"ParameterNotUsedInspection\" Severity=\"Wa" +
            "rning\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"Procedur" +
            "eNotUsedInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n  " +
            "  <CodeInspection Name=\"SelfAssignedDeclarationInspection\" Severity=\"Suggestion\"" +
            " InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"UnassignedVari" +
            "ableUsageInspection\" Severity=\"Error\" InspectionType=\"CodeQualityIssues\" />\r\n   " +
            " <CodeInspection Name=\"UndeclaredVariableInspection\" Severity=\"Error\" Inspection" +
            "Type=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"UntypedFunctionUsageInspe" +
            "ction\" Severity=\"Hint\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspe" +
            "ction Name=\"UseMeaningfulNameInspection\" Severity=\"Suggestion\" InspectionType=\"M" +
            "aintainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"VariableNotAss" +
            "ignedInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <" +
            "CodeInspection Name=\"VariableNotUsedInspection\" Severity=\"Warning\" InspectionTyp" +
            "e=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"VariableTypeNotDeclaredInspe" +
            "ction\" Severity=\"Warning\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeIn" +
            "spection Name=\"WriteOnlyPropertyInspection\" Severity=\"Suggestion\" InspectionType" +
            "=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"DefTypeStatementInspection\" S" +
            "everity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspect" +
            "ion Name=\"StepIsNotSpecifiedInspection\" Severity=\"DoNotShow\" InspectionType=\"Lan" +
            "guageOpportunities\" />\r\n    <CodeInspection Name=\"StepOneIsRedundantInspection\" " +
            "Severity=\"Hint\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection N" +
            "ame=\"SheetAccessedUsingStringInspection\" Severity=\"Suggestion\" InspectionType=\"L" +
            "anguageOpportunities\" />\r\n    <CodeInspection Name=\"ObsoleteMemberUsageInspectio" +
            "n\" Severity=\"Warning\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n " +
            "   <CodeInspection Name=\"ObsoleteCallingConventionInspection\" Severity=\"Warning\"" +
            " InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"DuplicatedAnno" +
            "tationInspection\" Severity=\"Error\" InspectionType=\"RubberduckOpportunities\" />\r\n" +
            "    <CodeInspection Name=\"ModuleWithoutFolderInspection\" Severity=\"Suggestion\" I" +
            "nspectionType=\"RubberduckOpportunities\" />\r\n    <CodeInspection Name=\"OnLocalErr" +
            "orInspection\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n " +
            "   <CodeInspection Name=\"IsMissingOnInappropriateArgumentInspection\" Severity=\"W" +
            "arning\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"IsMissi" +
            "ngWithNonArgumentParameterInspection\" Severity=\"Warning\" InspectionType=\"CodeQua" +
            "lityIssues\" />\r\n    <CodeInspection Name=\"AssignmentNotUsedInspection\" Severity=" +
            "\"Suggestion\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"Un" +
            "derscoreInPublicClassModuleMemberInspection\" Severity=\"Warning\" InspectionType=\"" +
            "CodeQualityIssues\" />\r\n    <CodeInspection Name=\"ExcelUdfNameIsValidCellReferenc" +
            "eInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n  </CodeI" +
            "nspections>\r\n  <WhitelistedIdentifiers />\r\n  <RunInspectionsOnSuccessfulParse>tr" +
            "ue</RunInspectionsOnSuccessfulParse>\r\n</CodeInspectionSettings>")]
        public global::Rubberduck.Settings.CodeInspectionSettings CodeInspectionSettings {
            get {
                return ((global::Rubberduck.Settings.CodeInspectionSettings)(this["CodeInspectionSettings"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>R</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>true</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>CodePaneRefactorRenameCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_CodePaneRefactorRenameCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_CodePaneRefactorRenameCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>F</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>true</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>RefactorEncapsulateFieldCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_RefactorEncapsulateFieldCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_RefactorEncapsulateFieldCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>M</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>true</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>RefactorExtractMethodCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_RefactorExtractMethodCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_RefactorExtractMethodCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>C</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>true</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>RefactorMoveCloserToUsageCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_RefactorMoveCloserToUsageCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_RefactorMoveCloserToUsageCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>R</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>false</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>CodeExplorerCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_CodeExplorerCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_CodeExplorerCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>E</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>true</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>ExportAllCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_ExportAllCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_ExportAllCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>T</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>false</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>FindSymbolCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_FindSymbolCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_FindSymbolCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>M</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>false</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>IndentCurrentModuleCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_IndentCurrentModuleCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_IndentCurrentModuleCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>P</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>false</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>IndentCurrentProcedureCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_IndentCurrentProcedureCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_IndentCurrentProcedureCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>I</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>true</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>InspectionResultsCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_InspectionResultsCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_InspectionResultsCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>`</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>false</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>ReparseCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_ReparseCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_ReparseCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>T</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>true</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>TestExplorerCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_TestExplorerCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_TestExplorerCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ToDoMarker xmlns:xsi=\"http://www.w3.org" +
            "/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" Text=\"TOD" +
            "O\" />")]
        public global::Rubberduck.Settings.ToDoMarker ToDoMarker_ToDo {
            get {
                return ((global::Rubberduck.Settings.ToDoMarker)(this["ToDoMarker_ToDo"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ToDoMarker xmlns:xsi=\"http://www.w3.org" +
            "/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" Text=\"NOT" +
            "E\" />")]
        public global::Rubberduck.Settings.ToDoMarker ToDoMarker_Note {
            get {
                return ((global::Rubberduck.Settings.ToDoMarker)(this["ToDoMarker_Note"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ToDoMarker xmlns:xsi=\"http://www.w3.org" +
            "/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" Text=\"BUG" +
            "\" />")]
        public global::Rubberduck.Settings.ToDoMarker ToDoMarker_Bug {
            get {
                return ((global::Rubberduck.Settings.ToDoMarker)(this["ToDoMarker_Bug"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<WindowSettings xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <CodeExplorerVisibleOnStartup>false</CodeExplorerVisibleOnStartup>
  <CodeInspectionsVisibleOnStartup>false</CodeInspectionsVisibleOnStartup>
  <TestExplorerVisibleOnStartup>false</TestExplorerVisibleOnStartup>
  <TodoExplorerVisibleOnStartup>false</TodoExplorerVisibleOnStartup>
  <CodeExplorer_SortByName>true</CodeExplorer_SortByName>
  <CodeExplorer_SortByCodeOrder>false</CodeExplorer_SortByCodeOrder>
  <CodeExplorer_GroupByType>false</CodeExplorer_GroupByType>
</WindowSettings>")]
        public global::Rubberduck.Settings.WindowSettings WindowSettings {
            get {
                return ((global::Rubberduck.Settings.WindowSettings)(this["WindowSettings"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<UnitTestSettings xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <BindingMode>LateBinding</BindingMode>
  <AssertMode>StrictAssert</AssertMode>
  <ModuleInit>true</ModuleInit>
  <MethodInit>true</MethodInit>
  <DefaultTestStubInNewModule>false</DefaultTestStubInNewModule>
</UnitTestSettings>")]
        public global::Rubberduck.Settings.UnitTestSettings UnitTestSettings {
            get {
                return ((global::Rubberduck.Settings.UnitTestSettings)(this["UnitTestSettings"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<GeneralSettings xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Language Code=""en-US"" />
  <CanShowSplash>true</CanShowSplash>
  <CanCheckVersion>true</CanCheckVersion>
  <CompileBeforeParse>true</CompileBeforeParse>
  <IsSmartIndenterPrompted>false</IsSmartIndenterPrompted>
  <IsAutoSaveEnabled>false</IsAutoSaveEnabled>
  <AutoSavePeriod>10</AutoSavePeriod>
  <UserEditedLogLevel>false</UserEditedLogLevel>
  <MinimumLogLevel>0</MinimumLogLevel>
  <SetDpiUnaware>false</SetDpiUnaware>
  <EnableExperimentalFeatures />
</GeneralSettings>")]
        public global::Rubberduck.Settings.GeneralSettings GeneralSettings {
            get {
                return ((global::Rubberduck.Settings.GeneralSettings)(this["GeneralSettings"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<AutoCompleteSettings xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" IsEnabled=""false"">
  <SmartConcat IsEnabled=""false"">
    <ConcatVbNewLineModifier>None</ConcatVbNewLineModifier>
    <ConcatMaxLines>25</ConcatMaxLines>
  </SmartConcat>
  <SelfClosingPairs IsEnabled=""false"" />
  <BlockCompletion IsEnabled=""false"" CompleteOnEnter=""false"" CompleteOnTab=""false"" />
</AutoCompleteSettings>")]
        public global::Rubberduck.Settings.AutoCompleteSettings AutoCompleteSettings {
            get {
                return ((global::Rubberduck.Settings.AutoCompleteSettings)(this["AutoCompleteSettings"]));
            }
        }
    }
}
