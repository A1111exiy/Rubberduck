<UserControl x:Class="Rubberduck.UI.UnitTesting.TestExplorerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Rubberduck.UI.UnitTesting"
             xmlns:unitTesting="clr-namespace:Rubberduck.UnitTesting"
             xmlns:resx="clr-namespace:Rubberduck.UI"
             xmlns:controls="clr-namespace:Rubberduck.UI.Controls"
             Language="{UICulture}"
             mc:Ignorable="d" 
             d:DesignHeight="192" d:DesignWidth="512"
             d:DataContext="{d:DesignInstance local:TestExplorerViewModel}">
    
    <UserControl.Resources>
        <unitTesting:TestOutcomeImageSourceConverter x:Key="OutcomeIconConverter" />
        <unitTesting:TestResultToOutcomeTextConverter x:Key="OutcomeTextConverter" />
        <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="18"/>
            <RowDefinition Height="*" MinHeight="64" />
        </Grid.RowDefinitions>
         
        <Border Grid.Row="0" Grid.RowSpan="3" Background="#FFEEF5FD" />

        <ToolBar Grid.Row="0" IsEnabled="{Binding Model.IsReady}">

            <Button Command="{Binding RefreshCommand}">
                <Image Height="16" Source="../../Resources/arrow-circle-double.png" />
            </Button>

            <Separator />
            <Menu>
                <MenuItem VerticalAlignment="Center" Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=Run}">
                    <MenuItem.Icon>
                        <Image Height="16" Source="../../Resources/control.png" />
                    </MenuItem.Icon>
                    <MenuItem Command="{Binding RunAllTestsCommand}" Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=TestExplorer_RunAllTests}">
                        <MenuItem.Icon>
                            <Image Height="16" Source="../../Resources/flask--arrow.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Command="{Binding RunNotExecutedTestsCommand}" Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=TestExplorer_RunNotRunTests}" >
                        <MenuItem.Icon>
                            <Image Height="16" Source="../../Resources/question-white.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Command="{Binding RunPassedTestsCommand}" Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=TestExplorer_RunPassedTests}" >
                        <MenuItem.Icon>
                            <Image Height="16" Source="../../Resources/tick-circle.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Command="{Binding RunFailedTestsCommand}" Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=TestExplorer_RunFailedTests}">
                        <MenuItem.Icon>
                            <Image Height="16" Source="../../Resources/cross-circle.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Command="{Binding RepeatLastRunCommand}" Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=TestExplorer_RunLastRunTests}">
                        <MenuItem.Icon>
                            <Image Height="16" Source="../../Resources/arrow-repeat.png" />
                        </MenuItem.Icon>
                    </MenuItem>

                </MenuItem>
                <MenuItem VerticalAlignment="Center" Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=Add}">
                    <MenuItem.Icon>
                        <Image Height="16" Source="../../Resources/flask--plus.png" />
                    </MenuItem.Icon>
                    <MenuItem Command="{Binding AddTestModuleCommand}" Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=TestExplorer_AddTestModule}">
                    </MenuItem>
                    <Separator />
                    <MenuItem Command="{Binding AddTestMethodCommand}" Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=TestExplorer_AddTestMethod}">
                        <MenuItem.Icon>
                            <Image Height="16" Source="../../Resources/flask.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Command="{Binding AddErrorTestMethodCommand}" Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=TestExplorer_AddExpectedErrorTestMethod}">
                        <MenuItem.Icon>
                            <Image Height="16" Source="../../Resources/flask--exclamation.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
            </Menu>
            <Separator />

            <Button Command="{Binding CopyResultsCommand}">
                <Image Height="16" Source="../../Resources/document-copy.png" />
            </Button>
            
        </ToolBar>

        <Border Grid.Row="1" Margin="2">
            <StackPanel>

                <Border BorderBrush="DimGray" BorderThickness="1,1,0,0">
                    <ProgressBar Height="12" 
                                 Background="DimGray" 
                                 Maximum="{Binding Model.Tests.Count, Mode=OneWay}" 
                                 Value="{Binding Model.ExecutedCount, Mode=OneWay}">
                        <ProgressBar.Foreground>
                            <SolidColorBrush Color="{Binding Model.ProgressBarColor}" />
                        </ProgressBar.Foreground>
                    </ProgressBar>
                </Border>

            </StackPanel>
        </Border>

        <Border Grid.Row="2" Padding="2">
            <ScrollViewer VerticalScrollBarVisibility="Visible">
                <controls:GroupingGrid ItemsSource="{Binding Model.TestMethods}"
                                       SelectedItem="{Binding SelectedTest}"
                                       ShowGroupingItemCount="True">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=Outcome}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="unitTesting:TestMethod">
                                    <Image
                                        Source="{Binding Result.Outcome, Converter={StaticResource OutcomeIconConverter}}"
                                        Height="16" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn
                            Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=TestExplorer_QualifiedMemberName}"
                            Binding="{Binding QualifiedMemberName.QualifiedModuleName}" />
                        <DataGridTextColumn
                            Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=TestExplorer_MethodName}"
                            Binding="{Binding QualifiedMemberName.MemberName}" />
                        <DataGridTextColumn
                            Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=TestExplorer_Message}"
                            Binding="{Binding Result.Output}" Width="*" />
                        <DataGridTextColumn
                            Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=TestExplorer_Duration}"
                            Binding="{Binding Result.Duration, StringFormat={}{0}ms}" />
                    </DataGrid.Columns>
                </controls:GroupingGrid>
            </ScrollViewer>
            </Border>        
        <resx:BusyIndicator Grid.Row="2" Width="36" Height="36" Visibility="{Binding Model.IsBusy, Converter={StaticResource BoolToVisibility}}" />

    </Grid>
</UserControl>
