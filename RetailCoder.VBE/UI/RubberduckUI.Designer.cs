//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18444
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rubberduck.UI {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class RubberduckUI {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal RubberduckUI() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Rubberduck.UI.RubberduckUI", typeof(RubberduckUI).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use of obsolete type hint in {0} &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string _ObsoleteTypeHint_ {
            get {
                return ResourceManager.GetString("_ObsoleteTypeHint_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} &apos;{1}&apos; is implicitly Variant ähnelt.
        /// </summary>
        public static string _TypeNotDeclared_ {
            get {
                return ResourceManager.GetString("_TypeNotDeclared_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All contributors to our GitHub repository ähnelt.
        /// </summary>
        public static string About_AllContributors {
            get {
                return ResourceManager.GetString("About_AllContributors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ...and anyone reading this! ähnelt.
        /// </summary>
        public static string About_Anyone {
            get {
                return ResourceManager.GetString("About_Anyone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attributions ähnelt.
        /// </summary>
        public static string About_Attributions {
            get {
                return ResourceManager.GetString("About_Attributions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Blogs: ähnelt.
        /// </summary>
        public static string About_Blogs {
            get {
                return ResourceManager.GetString("About_Blogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die About Rubberduck ähnelt.
        /// </summary>
        public static string About_Caption {
            get {
                return ResourceManager.GetString("About_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code Review Stack Exchange ähnelt.
        /// </summary>
        public static string About_CodeReview {
            get {
                return ResourceManager.GetString("About_CodeReview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Community: ähnelt.
        /// </summary>
        public static string About_Community {
            get {
                return ResourceManager.GetString("About_Community", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Contributors &amp; supporters: ähnelt.
        /// </summary>
        public static string About_Contributors {
            get {
                return ResourceManager.GetString("About_Contributors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die © Copyright 2014-2015 Mathieu Guindon &amp; Christopher McClellan ähnelt.
        /// </summary>
        public static string About_Copyright {
            get {
                return ResourceManager.GetString("About_Copyright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fugue icons by Yusuke Kamiyamane ähnelt.
        /// </summary>
        public static string About_FugueIconCredit {
            get {
                return ResourceManager.GetString("About_FugueIconCredit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die JetBrains ReSharper Community Team ähnelt.
        /// </summary>
        public static string About_JetBrains {
            get {
                return ResourceManager.GetString("About_JetBrains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die GitHub integration powered by LibGit2Sharp ähnelt.
        /// </summary>
        public static string About_LibGit2SharpCredit {
            get {
                return ResourceManager.GetString("About_LibGit2SharpCredit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parsing powered by ANTLR ähnelt.
        /// </summary>
        public static string About_ParsingCredit {
            get {
                return ResourceManager.GetString("About_ParsingCredit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Special Thanks ähnelt.
        /// </summary>
        public static string About_SpecialThanks {
            get {
                return ResourceManager.GetString("About_SpecialThanks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stack Overflow ähnelt.
        /// </summary>
        public static string About_StackOverflow {
            get {
                return ResourceManager.GetString("About_StackOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All our stargazers, likers &amp; followers, for the warm fuzzies ähnelt.
        /// </summary>
        public static string About_Stargazers {
            get {
                return ResourceManager.GetString("About_Stargazers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add ähnelt.
        /// </summary>
        public static string Add {
            get {
                return ResourceManager.GetString("Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Implementations of &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string AllImplementations_Caption {
            get {
                return ResourceManager.GetString("AllImplementations_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Class or member &apos;{0}&apos; is not implemented. ähnelt.
        /// </summary>
        public static string AllImplementations_NoneFound {
            get {
                return ResourceManager.GetString("AllImplementations_NoneFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All references: &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string AllReferences_Caption {
            get {
                return ResourceManager.GetString("AllReferences_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No references were found for identifier &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string AllReferences_NoneFound {
            get {
                return ResourceManager.GetString("AllReferences_NoneFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ByVal parameter &apos;{0}&apos; is assigned ähnelt.
        /// </summary>
        public static string ByValParameterIsAssigned_ {
            get {
                return ResourceManager.GetString("ByValParameterIsAssigned_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel ähnelt.
        /// </summary>
        public static string CancelButtonText {
            get {
                return ResourceManager.GetString("CancelButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change ähnelt.
        /// </summary>
        public static string Change {
            get {
                return ResourceManager.GetString("Change", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Class module (.cls) ähnelt.
        /// </summary>
        public static string CodeExplorer_AddClassText {
            get {
                return ResourceManager.GetString("CodeExplorer_AddClassText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die User &amp;form ähnelt.
        /// </summary>
        public static string CodeExplorer_AddFormText {
            get {
                return ResourceManager.GetString("CodeExplorer_AddFormText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Standard module (.bas) ähnelt.
        /// </summary>
        public static string CodeExplorer_AddStdModuleText {
            get {
                return ResourceManager.GetString("CodeExplorer_AddStdModuleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Test module ähnelt.
        /// </summary>
        public static string CodeExplorer_AddTestModuleText {
            get {
                return ResourceManager.GetString("CodeExplorer_AddTestModuleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display member &amp;names ähnelt.
        /// </summary>
        public static string CodeExplorer_DisplayMemberNamesText {
            get {
                return ResourceManager.GetString("CodeExplorer_DisplayMemberNamesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display style ähnelt.
        /// </summary>
        public static string CodeExplorer_DisplayModeToolTip {
            get {
                return ResourceManager.GetString("CodeExplorer_DisplayModeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display full &amp;signatures ähnelt.
        /// </summary>
        public static string CodeExplorer_DisplaySignaturesText {
            get {
                return ResourceManager.GetString("CodeExplorer_DisplaySignaturesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find &amp;All Implementations... ähnelt.
        /// </summary>
        public static string CodeExplorer_FindAllImplementationsText {
            get {
                return ResourceManager.GetString("CodeExplorer_FindAllImplementationsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Find All References... ähnelt.
        /// </summary>
        public static string CodeExplorer_FindAllReferencesText {
            get {
                return ResourceManager.GetString("CodeExplorer_FindAllReferencesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Inspect ähnelt.
        /// </summary>
        public static string CodeExplorer_Inspect {
            get {
                return ResourceManager.GetString("CodeExplorer_Inspect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Na&amp;vigate ähnelt.
        /// </summary>
        public static string CodeExplorer_Navigate {
            get {
                return ResourceManager.GetString("CodeExplorer_Navigate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;New ähnelt.
        /// </summary>
        public static string CodeExplorer_New {
            get {
                return ResourceManager.GetString("CodeExplorer_New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add a component to the active project ähnelt.
        /// </summary>
        public static string CodeExplorer_NewToolTip {
            get {
                return ResourceManager.GetString("CodeExplorer_NewToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die R&amp;efresh ähnelt.
        /// </summary>
        public static string CodeExplorer_Refresh {
            get {
                return ResourceManager.GetString("CodeExplorer_Refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run All &amp;Tests ähnelt.
        /// </summary>
        public static string CodeExplorer_RunAllTestsText {
            get {
                return ResourceManager.GetString("CodeExplorer_RunAllTestsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Show Designer ähnelt.
        /// </summary>
        public static string CodeExplorer_ShowDesignerText {
            get {
                return ResourceManager.GetString("CodeExplorer_ShowDesignerText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open Designer ähnelt.
        /// </summary>
        public static string CodeExplorer_ShowDesignerToolTip {
            get {
                return ResourceManager.GetString("CodeExplorer_ShowDesignerToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Toggle folders ähnelt.
        /// </summary>
        public static string CodeExplorer_ShowFoldersToolTip {
            get {
                return ResourceManager.GetString("CodeExplorer_ShowFoldersToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code Explorer ähnelt.
        /// </summary>
        public static string CodeExplorerDockablePresenter_Caption {
            get {
                return ResourceManager.GetString("CodeExplorerDockablePresenter_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} (parsing...) ähnelt.
        /// </summary>
        public static string CodeExplorerDockablePresenter_ParseStarted {
            get {
                return ResourceManager.GetString("CodeExplorerDockablePresenter_ParseStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code Inspections ähnelt.
        /// </summary>
        public static string CodeInspections {
            get {
                return ResourceManager.GetString("CodeInspections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy inspection results to clipboard ähnelt.
        /// </summary>
        public static string CodeInspections_CopyToolTip {
            get {
                return ResourceManager.GetString("CodeInspections_CopyToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Navigate to selected issue ähnelt.
        /// </summary>
        public static string CodeInspections_GoToolTip {
            get {
                return ResourceManager.GetString("CodeInspections_GoToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Inspecting... ähnelt.
        /// </summary>
        public static string CodeInspections_Inspecting {
            get {
                return ResourceManager.GetString("CodeInspections_Inspecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} ({1} issues) ähnelt.
        /// </summary>
        public static string CodeInspections_InspectingIssues_Plural {
            get {
                return ResourceManager.GetString("CodeInspections_InspectingIssues_Plural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} ({1} issue) ähnelt.
        /// </summary>
        public static string CodeInspections_InspectingIssues_Singular {
            get {
                return ResourceManager.GetString("CodeInspections_InspectingIssues_Singular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Navigate to next issue ähnelt.
        /// </summary>
        public static string CodeInspections_NextToolTip {
            get {
                return ResourceManager.GetString("CodeInspections_NextToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} issues ähnelt.
        /// </summary>
        public static string CodeInspections_NumberOfIssues_Plural {
            get {
                return ResourceManager.GetString("CodeInspections_NumberOfIssues_Plural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} issue ähnelt.
        /// </summary>
        public static string CodeInspections_NumberOfIssues_Singular {
            get {
                return ResourceManager.GetString("CodeInspections_NumberOfIssues_Singular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck Code Inspections - {0}
        ///{1} issues found. ähnelt.
        /// </summary>
        public static string CodeInspections_NumberOfIssuesFound_Plural {
            get {
                return ResourceManager.GetString("CodeInspections_NumberOfIssuesFound_Plural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck Code Inspections - {0}
        ///{1} issue found. ähnelt.
        /// </summary>
        public static string CodeInspections_NumberOfIssuesFound_Singular {
            get {
                return ResourceManager.GetString("CodeInspections_NumberOfIssuesFound_Singular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Navigate to previous issue ähnelt.
        /// </summary>
        public static string CodeInspections_PreviousToolTip {
            get {
                return ResourceManager.GetString("CodeInspections_PreviousToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Address the issue ähnelt.
        /// </summary>
        public static string CodeInspections_QuickFixToolTip {
            get {
                return ResourceManager.GetString("CodeInspections_QuickFixToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run code inspections ähnelt.
        /// </summary>
        public static string CodeInspections_RefreshToolTip {
            get {
                return ResourceManager.GetString("CodeInspections_RefreshToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run code inspections ähnelt.
        /// </summary>
        public static string CodeInspections_Run {
            get {
                return ResourceManager.GetString("CodeInspections_Run", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code Quality Issues ähnelt.
        /// </summary>
        public static string CodeInspectionSettings_CodeQualityIssues {
            get {
                return ResourceManager.GetString("CodeInspectionSettings_CodeQualityIssues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language Opportunities ähnelt.
        /// </summary>
        public static string CodeInspectionSettings_LanguageOpportunities {
            get {
                return ResourceManager.GetString("CodeInspectionSettings_LanguageOpportunities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maintainability and Readability Issues ähnelt.
        /// </summary>
        public static string CodeInspectionSettings_MaintainabilityAndReadabilityIssues {
            get {
                return ResourceManager.GetString("CodeInspectionSettings_MaintainabilityAndReadabilityIssues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do Not Show ähnelt.
        /// </summary>
        public static string CodeInspectionSeverity_DoNotShow {
            get {
                return ResourceManager.GetString("CodeInspectionSeverity_DoNotShow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error ähnelt.
        /// </summary>
        public static string CodeInspectionSeverity_Error {
            get {
                return ResourceManager.GetString("CodeInspectionSeverity_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hint ähnelt.
        /// </summary>
        public static string CodeInspectionSeverity_Hint {
            get {
                return ResourceManager.GetString("CodeInspectionSeverity_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Suggestion ähnelt.
        /// </summary>
        public static string CodeInspectionSeverity_Suggestion {
            get {
                return ResourceManager.GetString("CodeInspectionSeverity_Suggestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning ähnelt.
        /// </summary>
        public static string CodeInspectionSeverity_Warning {
            get {
                return ResourceManager.GetString("CodeInspectionSeverity_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Component ähnelt.
        /// </summary>
        public static string Component {
            get {
                return ResourceManager.GetString("Component", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Constant &apos;{0}&apos; is never used ähnelt.
        /// </summary>
        public static string ConstantNotUsed_ {
            get {
                return ResourceManager.GetString("ConstantNotUsed_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Find all references... ähnelt.
        /// </summary>
        public static string ContextMenu_FindAllReferences {
            get {
                return ResourceManager.GetString("ContextMenu_FindAllReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find &amp;symbol... ähnelt.
        /// </summary>
        public static string ContextMenu_FindSymbol {
            get {
                return ResourceManager.GetString("ContextMenu_FindSymbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Go to &amp;implementation... ähnelt.
        /// </summary>
        public static string ContextMenu_GoToImplementation {
            get {
                return ResourceManager.GetString("ContextMenu_GoToImplementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die class ähnelt.
        /// </summary>
        public static string DeclarationType_Class {
            get {
                return ResourceManager.GetString("DeclarationType_Class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die constant ähnelt.
        /// </summary>
        public static string DeclarationType_Constant {
            get {
                return ResourceManager.GetString("DeclarationType_Constant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die control ähnelt.
        /// </summary>
        public static string DeclarationType_Control {
            get {
                return ResourceManager.GetString("DeclarationType_Control", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die enum ähnelt.
        /// </summary>
        public static string DeclarationType_Enumeration {
            get {
                return ResourceManager.GetString("DeclarationType_Enumeration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die enum member ähnelt.
        /// </summary>
        public static string DeclarationType_EnumerationMember {
            get {
                return ResourceManager.GetString("DeclarationType_EnumerationMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die event ähnelt.
        /// </summary>
        public static string DeclarationType_Event {
            get {
                return ResourceManager.GetString("DeclarationType_Event", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die function ähnelt.
        /// </summary>
        public static string DeclarationType_Function {
            get {
                return ResourceManager.GetString("DeclarationType_Function", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die library function ähnelt.
        /// </summary>
        public static string DeclarationType_LibraryFunction {
            get {
                return ResourceManager.GetString("DeclarationType_LibraryFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die line label ähnelt.
        /// </summary>
        public static string DeclarationType_LineLabel {
            get {
                return ResourceManager.GetString("DeclarationType_LineLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die module ähnelt.
        /// </summary>
        public static string DeclarationType_Module {
            get {
                return ResourceManager.GetString("DeclarationType_Module", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die parameter ähnelt.
        /// </summary>
        public static string DeclarationType_Parameter {
            get {
                return ResourceManager.GetString("DeclarationType_Parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die procedure ähnelt.
        /// </summary>
        public static string DeclarationType_Procedure {
            get {
                return ResourceManager.GetString("DeclarationType_Procedure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die project ähnelt.
        /// </summary>
        public static string DeclarationType_Project {
            get {
                return ResourceManager.GetString("DeclarationType_Project", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die property get accessor ähnelt.
        /// </summary>
        public static string DeclarationType_PropertyGet {
            get {
                return ResourceManager.GetString("DeclarationType_PropertyGet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die property let accessor ähnelt.
        /// </summary>
        public static string DeclarationType_PropertyLet {
            get {
                return ResourceManager.GetString("DeclarationType_PropertyLet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die property set accessor ähnelt.
        /// </summary>
        public static string DeclarationType_PropertySet {
            get {
                return ResourceManager.GetString("DeclarationType_PropertySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die user-defined type ähnelt.
        /// </summary>
        public static string DeclarationType_UserDefinedType {
            get {
                return ResourceManager.GetString("DeclarationType_UserDefinedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die user-defined type member ähnelt.
        /// </summary>
        public static string DeclarationType_UserDefinedTypeMember {
            get {
                return ResourceManager.GetString("DeclarationType_UserDefinedTypeMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die variable ähnelt.
        /// </summary>
        public static string DeclarationType_Variable {
            get {
                return ResourceManager.GetString("DeclarationType_Variable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable this inspection ähnelt.
        /// </summary>
        public static string DisableThisInspection {
            get {
                return ResourceManager.GetString("DisableThisInspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Icon ähnlich wie (Symbol).
        /// </summary>
        public static System.Drawing.Icon Ducky {
            get {
                object obj = ResourceManager.GetObject("Ducky", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You&apos;ve earned the &quot;Continuator&quot; badge! ähnelt.
        /// </summary>
        public static string EasterEgg_Continuator {
            get {
                return ResourceManager.GetString("EasterEgg_Continuator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Accessibility: ähnelt.
        /// </summary>
        public static string ExtractMethod_AccessibilityLabel {
            get {
                return ResourceManager.GetString("ExtractMethod_AccessibilityLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Extract Method ähnelt.
        /// </summary>
        public static string ExtractMethod_Caption {
            get {
                return ResourceManager.GetString("ExtractMethod_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please specify method name, return type and/or parameters (if applicable), and other options. ähnelt.
        /// </summary>
        public static string ExtractMethod_InstructionsText {
            get {
                return ResourceManager.GetString("ExtractMethod_InstructionsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The current selection is not valid. ähnelt.
        /// </summary>
        public static string ExtractMethod_InvalidSelectionMessage {
            get {
                return ResourceManager.GetString("ExtractMethod_InvalidSelectionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (none) ähnelt.
        /// </summary>
        public static string ExtractMethod_OutputNone {
            get {
                return ResourceManager.GetString("ExtractMethod_OutputNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameters: ähnelt.
        /// </summary>
        public static string ExtractMethod_ParametersLabel {
            get {
                return ResourceManager.GetString("ExtractMethod_ParametersLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preview: ähnelt.
        /// </summary>
        public static string ExtractMethod_PreviewLabel {
            get {
                return ResourceManager.GetString("ExtractMethod_PreviewLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Return: ähnelt.
        /// </summary>
        public static string ExtractMethod_ReturnLabel {
            get {
                return ResourceManager.GetString("ExtractMethod_ReturnLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set ähnelt.
        /// </summary>
        public static string ExtractMethod_SetBoxLabel {
            get {
                return ResourceManager.GetString("ExtractMethod_SetBoxLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Extract method ähnelt.
        /// </summary>
        public static string ExtractMethod_TitleText {
            get {
                return ResourceManager.GetString("ExtractMethod_TitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find symbol ähnelt.
        /// </summary>
        public static string FindSymbolDialog_Caption {
            get {
                return ResourceManager.GetString("FindSymbolDialog_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fix ähnelt.
        /// </summary>
        public static string Fix {
            get {
                return ResourceManager.GetString("Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Re&amp;name ähnelt.
        /// </summary>
        public static string FormContextMenu_Rename {
            get {
                return ResourceManager.GetString("FormContextMenu_Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Function &apos;{0}&apos; is never used ähnelt.
        /// </summary>
        public static string FunctionNotUsed_ {
            get {
                return ResourceManager.GetString("FunctionNotUsed_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Project &apos;{0}&apos; has generic name ähnelt.
        /// </summary>
        public static string GenericProjectName_ {
            get {
                return ResourceManager.GetString("GenericProjectName_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Go ähnelt.
        /// </summary>
        public static string Go {
            get {
                return ResourceManager.GetString("Go", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Home ähnelt.
        /// </summary>
        public static string Home {
            get {
                return ResourceManager.GetString("Home", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; is an implicit reference to the active worksheet ähnelt.
        /// </summary>
        public static string ImplicitActiveSheetReference_ {
            get {
                return ResourceManager.GetString("ImplicitActiveSheetReference_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; is an implicit reference to the active workbook ähnelt.
        /// </summary>
        public static string ImplicitActiveWorkbookReference_ {
            get {
                return ResourceManager.GetString("ImplicitActiveWorkbookReference_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter &apos;{0}&apos; is passed ByRef implicitly ähnelt.
        /// </summary>
        public static string ImplicitByRef_ {
            get {
                return ResourceManager.GetString("ImplicitByRef_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Member &apos;{0}&apos; is implicitly Public ähnelt.
        /// </summary>
        public static string ImplicitPublicMember_ {
            get {
                return ResourceManager.GetString("ImplicitPublicMember_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Function &apos;{0}&apos; returns an implicit Variant ähnelt.
        /// </summary>
        public static string ImplicitVariantReturnType_ {
            get {
                return ResourceManager.GetString("ImplicitVariantReturnType_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Inspect ähnelt.
        /// </summary>
        public static string Inspect {
            get {
                return ResourceManager.GetString("Inspect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace &apos;Global&apos; access modifier with &apos;Public&apos; ähnelt.
        /// </summary>
        public static string Inspections_ChangeGlobalAccessModifierToPublic {
            get {
                return ResourceManager.GetString("Inspections_ChangeGlobalAccessModifierToPublic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Convert function to procedure ähnelt.
        /// </summary>
        public static string Inspections_ConvertFunctionToProcedure {
            get {
                return ResourceManager.GetString("Inspections_ConvertFunctionToProcedure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die declaration of  ähnelt.
        /// </summary>
        public static string Inspections_DeclarationOf {
            get {
                return ResourceManager.GetString("Inspections_DeclarationOf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Declare as explicit Variant ähnelt.
        /// </summary>
        public static string Inspections_DeclareAsExplicitVariant {
            get {
                return ResourceManager.GetString("Inspections_DeclareAsExplicitVariant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Introduce local variable ähnelt.
        /// </summary>
        public static string Inspections_IntroduceLocalVariable {
            get {
                return ResourceManager.GetString("Inspections_IntroduceLocalVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Write variable on one line ähnelt.
        /// </summary>
        public static string Inspections_MultilineParameter {
            get {
                return ResourceManager.GetString("Inspections_MultilineParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pass parameter by reference ähnelt.
        /// </summary>
        public static string Inspections_PassParamByReference {
            get {
                return ResourceManager.GetString("Inspections_PassParamByReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pass parameter by reference explicitly ähnelt.
        /// </summary>
        public static string Inspections_PassParamByRefExplicitly {
            get {
                return ResourceManager.GetString("Inspections_PassParamByRefExplicitly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pass parameter by value ähnelt.
        /// </summary>
        public static string Inspections_PassParamByValue {
            get {
                return ResourceManager.GetString("Inspections_PassParamByValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove comment ähnelt.
        /// </summary>
        public static string Inspections_RemoveComment {
            get {
                return ResourceManager.GetString("Inspections_RemoveComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove obsolete statement ähnelt.
        /// </summary>
        public static string Inspections_RemoveObsoleteStatement {
            get {
                return ResourceManager.GetString("Inspections_RemoveObsoleteStatement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove type hints ähnelt.
        /// </summary>
        public static string Inspections_RemoveTypeHints {
            get {
                return ResourceManager.GetString("Inspections_RemoveTypeHints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove unassigned variable ähnelt.
        /// </summary>
        public static string Inspections_RemoveUnassignedVariable {
            get {
                return ResourceManager.GetString("Inspections_RemoveUnassignedVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove unused declaration ähnelt.
        /// </summary>
        public static string Inspections_RemoveUnusedDeclaration {
            get {
                return ResourceManager.GetString("Inspections_RemoveUnusedDeclaration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove unused parameter ähnelt.
        /// </summary>
        public static string Inspections_RemoveUnusedParameter {
            get {
                return ResourceManager.GetString("Inspections_RemoveUnusedParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove usage (breaks code) ähnelt.
        /// </summary>
        public static string Inspections_RemoveUsageBreaksCode {
            get {
                return ResourceManager.GetString("Inspections_RemoveUsageBreaksCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace &apos;Rem&apos; usage with a single-quote comment marker ähnelt.
        /// </summary>
        public static string Inspections_ReplaceRemWithSingleQuoteMarker {
            get {
                return ResourceManager.GetString("Inspections_ReplaceRemWithSingleQuoteMarker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Return explicit Variant ähnelt.
        /// </summary>
        public static string Inspections_ReturnExplicitVariant {
            get {
                return ResourceManager.GetString("Inspections_ReturnExplicitVariant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specify &apos;Option Explicit&apos; ähnelt.
        /// </summary>
        public static string Inspections_SpecifyOptionExplicit {
            get {
                return ResourceManager.GetString("Inspections_SpecifyOptionExplicit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specify Public access modifier explicitly ähnelt.
        /// </summary>
        public static string Inspections_SpecifyPublicModifierExplicitly {
            get {
                return ResourceManager.GetString("Inspections_SpecifyPublicModifierExplicitly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Separate multiple declarations into multiple instructions ähnelt.
        /// </summary>
        public static string Inspections_SplitDeclarations {
            get {
                return ResourceManager.GetString("Inspections_SplitDeclarations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TODO ähnelt.
        /// </summary>
        public static string Inspections_UnassignedVariableToDo {
            get {
                return ResourceManager.GetString("Inspections_UnassignedVariableToDo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die usage of  ähnelt.
        /// </summary>
        public static string Inspections_UsageOf {
            get {
                return ResourceManager.GetString("Inspections_UsageOf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Issue ähnelt.
        /// </summary>
        public static string Issue {
            get {
                return ResourceManager.GetString("Issue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die German ähnelt.
        /// </summary>
        public static string Language_DE {
            get {
                return ResourceManager.GetString("Language_DE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die English ähnelt.
        /// </summary>
        public static string Language_EN {
            get {
                return ResourceManager.GetString("Language_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die French ähnelt.
        /// </summary>
        public static string Language_FR {
            get {
                return ResourceManager.GetString("Language_FR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Japanese ähnelt.
        /// </summary>
        public static string Language_JP {
            get {
                return ResourceManager.GetString("Language_JP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Swedish ähnelt.
        /// </summary>
        public static string Language_SV {
            get {
                return ResourceManager.GetString("Language_SV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Line ähnelt.
        /// </summary>
        public static string Line {
            get {
                return ResourceManager.GetString("Line", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Loading Rubberduck Configuration ähnelt.
        /// </summary>
        public static string LoadConfigError {
            get {
                return ResourceManager.GetString("LoadConfigError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Make ActiveSheet reference explicit ähnelt.
        /// </summary>
        public static string MakeActiveSheetReferenceExplicit {
            get {
                return ResourceManager.GetString("MakeActiveSheetReferenceExplicit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Make ActiveWorkbook reference explicit ähnelt.
        /// </summary>
        public static string MakeActiveWorkbookReferenceExplicit {
            get {
                return ResourceManager.GetString("MakeActiveWorkbookReferenceExplicit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Module Name ähnelt.
        /// </summary>
        public static string ModuleName {
            get {
                return ResourceManager.GetString("ModuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Module options should be specified first ähnelt.
        /// </summary>
        public static string ModuleOptionsNotSpecifiedFirst {
            get {
                return ResourceManager.GetString("ModuleOptionsNotSpecifiedFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter &apos;{0}&apos; is declared on multiple lines ähnelt.
        /// </summary>
        public static string MultilineParameter_ {
            get {
                return ResourceManager.GetString("MultilineParameter_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Instruction contains multiple declarations ähnelt.
        /// </summary>
        public static string MultipleDeclarations {
            get {
                return ResourceManager.GetString("MultipleDeclarations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name ähnelt.
        /// </summary>
        public static string Name {
            get {
                return ResourceManager.GetString("Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name: ähnelt.
        /// </summary>
        public static string NameLabelText {
            get {
                return ResourceManager.GetString("NameLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Navigate ähnelt.
        /// </summary>
        public static string Navigate {
            get {
                return ResourceManager.GetString("Navigate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Navigation ähnelt.
        /// </summary>
        public static string Navigation {
            get {
                return ResourceManager.GetString("Navigation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New ähnelt.
        /// </summary>
        public static string New {
            get {
                return ResourceManager.GetString("New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Next ähnelt.
        /// </summary>
        public static string Next {
            get {
                return ResourceManager.GetString("Next", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Return value for member &apos;{0}&apos; is never assigned ähnelt.
        /// </summary>
        public static string NonReturningFunction_ {
            get {
                return ResourceManager.GetString("NonReturningFunction_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use of obsolete Call statement ähnelt.
        /// </summary>
        public static string ObsoleteCall {
            get {
                return ResourceManager.GetString("ObsoleteCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use of obsolete Rem comment syntax ähnelt.
        /// </summary>
        public static string ObsoleteComment {
            get {
                return ResourceManager.GetString("ObsoleteComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use of obsolete Global access modifier ähnelt.
        /// </summary>
        public static string ObsoleteGlobal {
            get {
                return ResourceManager.GetString("ObsoleteGlobal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use of obsolete Let statement ähnelt.
        /// </summary>
        public static string ObsoleteLet {
            get {
                return ResourceManager.GetString("ObsoleteLet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Offline ähnelt.
        /// </summary>
        public static string Offline {
            get {
                return ResourceManager.GetString("Offline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ok ähnelt.
        /// </summary>
        public static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OK ähnelt.
        /// </summary>
        public static string OK_AllCaps {
            get {
                return ResourceManager.GetString("OK_AllCaps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Online ähnelt.
        /// </summary>
        public static string Online {
            get {
                return ResourceManager.GetString("Online", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Potentially confusing implicit array lower bound ähnelt.
        /// </summary>
        public static string OptionBase {
            get {
                return ResourceManager.GetString("OptionBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Option Explicit is not specified ähnelt.
        /// </summary>
        public static string OptionExplicit {
            get {
                return ResourceManager.GetString("OptionExplicit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Outcome ähnelt.
        /// </summary>
        public static string Outcome {
            get {
                return ResourceManager.GetString("Outcome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter ähnelt.
        /// </summary>
        public static string Parameter {
            get {
                return ResourceManager.GetString("Parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter &apos;{0}&apos; can be passed by value ähnelt.
        /// </summary>
        public static string ParameterCanBeByVal_ {
            get {
                return ResourceManager.GetString("ParameterCanBeByVal_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter &apos;{0}&apos; is not used ähnelt.
        /// </summary>
        public static string ParameterNotUsed_ {
            get {
                return ResourceManager.GetString("ParameterNotUsed_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Parser Errors ähnelt.
        /// </summary>
        public static string ParseErrors_Caption {
            get {
                return ResourceManager.GetString("ParseErrors_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parsing &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ParseProgress {
            get {
                return ResourceManager.GetString("ParseProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Details ähnelt.
        /// </summary>
        public static string ParserProgress_ShowDetails {
            get {
                return ResourceManager.GetString("ParserProgress_ShowDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parsing project components... ähnelt.
        /// </summary>
        public static string ParseStarted {
            get {
                return ResourceManager.GetString("ParseStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (parsing...) ähnelt.
        /// </summary>
        public static string Parsing {
            get {
                return ResourceManager.GetString("Parsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Passed ähnelt.
        /// </summary>
        public static string Passed {
            get {
                return ResourceManager.GetString("Passed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Previous ähnelt.
        /// </summary>
        public static string Previous {
            get {
                return ResourceManager.GetString("Previous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Priority ähnelt.
        /// </summary>
        public static string Priority {
            get {
                return ResourceManager.GetString("Priority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Procedure &apos;{0}&apos; is never used ähnelt.
        /// </summary>
        public static string ProcedureNotUsed_ {
            get {
                return ResourceManager.GetString("ProcedureNotUsed_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Project ähnelt.
        /// </summary>
        public static string Project {
            get {
                return ResourceManager.GetString("Project", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Project Name ähnelt.
        /// </summary>
        public static string ProjectName {
            get {
                return ResourceManager.GetString("ProjectName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}
        ///{1}
        ///
        ///{2}
        ///
        ///Would you like to restore default configuration?
        ///Warning: All customized settings will be lost.  Your old file will be saved in &apos;{3}&apos;. ähnelt.
        /// </summary>
        public static string PromptLoadDefaultConfig {
            get {
                return ResourceManager.GetString("PromptLoadDefaultConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fix all occurrences in module ähnelt.
        /// </summary>
        public static string QuickFix_ThisModule {
            get {
                return ResourceManager.GetString("QuickFix_ThisModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fix all occurrences in project ähnelt.
        /// </summary>
        public static string QuickFix_ThisProject {
            get {
                return ResourceManager.GetString("QuickFix_ThisProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use &apos;{0}$&apos; instead of &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string QuickFixUseTypedFunction_ {
            get {
                return ResourceManager.GetString("QuickFixUseTypedFunction_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Method &apos;{0}&apos; implements &apos;{1}.{2}&apos;. Change interface signature? (will propagate to all implementations) ähnelt.
        /// </summary>
        public static string Refactoring_TargetIsInterfaceMemberImplementation {
            get {
                return ResourceManager.GetString("Refactoring_TargetIsInterfaceMemberImplementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Extract &amp;Method ähnelt.
        /// </summary>
        public static string RefactorMenu_ExtractMethod {
            get {
                return ResourceManager.GetString("RefactorMenu_ExtractMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remo&amp;ve Parameters ähnelt.
        /// </summary>
        public static string RefactorMenu_RemoveParameter {
            get {
                return ResourceManager.GetString("RefactorMenu_RemoveParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Rename ähnelt.
        /// </summary>
        public static string RefactorMenu_Rename {
            get {
                return ResourceManager.GetString("RefactorMenu_Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reorder &amp;Parameters ähnelt.
        /// </summary>
        public static string RefactorMenu_ReorderParameters {
            get {
                return ResourceManager.GetString("RefactorMenu_ReorderParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refresh ähnelt.
        /// </summary>
        public static string Refresh {
            get {
                return ResourceManager.GetString("Refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Regex Search &amp; Replace ähnelt.
        /// </summary>
        public static string RegexSearchReplace_Caption {
            get {
                return ResourceManager.GetString("RegexSearchReplace_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find ähnelt.
        /// </summary>
        public static string RegexSearchReplace_FindButtonLabel {
            get {
                return ResourceManager.GetString("RegexSearchReplace_FindButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace All ähnelt.
        /// </summary>
        public static string RegexSearchReplace_ReplaceAllButtonLabel {
            get {
                return ResourceManager.GetString("RegexSearchReplace_ReplaceAllButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace ähnelt.
        /// </summary>
        public static string RegexSearchReplace_ReplaceButtonLabel {
            get {
                return ResourceManager.GetString("RegexSearchReplace_ReplaceButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace: ähnelt.
        /// </summary>
        public static string RegexSearchReplace_ReplaceLabel {
            get {
                return ResourceManager.GetString("RegexSearchReplace_ReplaceLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scope: ähnelt.
        /// </summary>
        public static string RegexSearchReplace_ScopeLabel {
            get {
                return ResourceManager.GetString("RegexSearchReplace_ScopeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search: ähnelt.
        /// </summary>
        public static string RegexSearchReplace_SearchLabel {
            get {
                return ResourceManager.GetString("RegexSearchReplace_SearchLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Opened Files ähnelt.
        /// </summary>
        public static string RegexSearchReplaceScope_AllOpenedFiles {
            get {
                return ResourceManager.GetString("RegexSearchReplaceScope_AllOpenedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Open Projects ähnelt.
        /// </summary>
        public static string RegexSearchReplaceScope_AllOpenProjects {
            get {
                return ResourceManager.GetString("RegexSearchReplaceScope_AllOpenProjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current Block ähnelt.
        /// </summary>
        public static string RegexSearchReplaceScope_CurrentBlock {
            get {
                return ResourceManager.GetString("RegexSearchReplaceScope_CurrentBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current File ähnelt.
        /// </summary>
        public static string RegexSearchReplaceScope_CurrentFile {
            get {
                return ResourceManager.GetString("RegexSearchReplaceScope_CurrentFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current Project ähnelt.
        /// </summary>
        public static string RegexSearchReplaceScope_CurrentProject {
            get {
                return ResourceManager.GetString("RegexSearchReplaceScope_CurrentProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selection ähnelt.
        /// </summary>
        public static string RegexSearchReplaceScope_Selection {
            get {
                return ResourceManager.GetString("RegexSearchReplaceScope_Selection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove ähnelt.
        /// </summary>
        public static string Remove {
            get {
                return ResourceManager.GetString("Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Remove Parameters ähnelt.
        /// </summary>
        public static string RemoveParamsDialog_Caption {
            get {
                return ResourceManager.GetString("RemoveParamsDialog_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a parameter and double-click it or use buttons to remove or restore it. ähnelt.
        /// </summary>
        public static string RemoveParamsDialog_InstructionsLabelText {
            get {
                return ResourceManager.GetString("RemoveParamsDialog_InstructionsLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot remove last parameter from setter or letter. ähnelt.
        /// </summary>
        public static string RemoveParamsDialog_RemoveIllegalSetterLetterParameter {
            get {
                return ResourceManager.GetString("RemoveParamsDialog_RemoveIllegalSetterLetterParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove parameters ähnelt.
        /// </summary>
        public static string RemoveParamsDialog_TitleText {
            get {
                return ResourceManager.GetString("RemoveParamsDialog_TitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No parameters in method &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string RemovePresenter_NoParametersError {
            get {
                return ResourceManager.GetString("RemovePresenter_NoParametersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename ähnelt.
        /// </summary>
        public static string Rename {
            get {
                return ResourceManager.GetString("Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename {0} ähnelt.
        /// </summary>
        public static string Rename_DeclarationType {
            get {
                return ResourceManager.GetString("Rename_DeclarationType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Rename ähnelt.
        /// </summary>
        public static string RenameDialog_Caption {
            get {
                return ResourceManager.GetString("RenameDialog_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Renaming to &apos;{0}&apos; clashes with &apos;{1}&apos; in the same scope.
        ///Are you sure you want to proceed with this rename? ähnelt.
        /// </summary>
        public static string RenameDialog_ConflictingNames {
            get {
                return ResourceManager.GetString("RenameDialog_ConflictingNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please specify new name for {0} &apos;{1}&apos;. ähnelt.
        /// </summary>
        public static string RenameDialog_InstructionsLabelText {
            get {
                return ResourceManager.GetString("RenameDialog_InstructionsLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not rename module. ähnelt.
        /// </summary>
        public static string RenameDialog_ModuleRenameError {
            get {
                return ResourceManager.GetString("RenameDialog_ModuleRenameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not rename project. ähnelt.
        /// </summary>
        public static string RenameDialog_ProjectRenameError {
            get {
                return ResourceManager.GetString("RenameDialog_ProjectRenameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename identifier ähnelt.
        /// </summary>
        public static string RenameDialog_TitleText {
            get {
                return ResourceManager.GetString("RenameDialog_TitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Method &apos;{0}&apos; implements &apos;{1}.{2}&apos;. Rename the interface member? ähnelt.
        /// </summary>
        public static string RenamePresenter_TargetIsInterfaceMemberImplementation {
            get {
                return ResourceManager.GetString("RenamePresenter_TargetIsInterfaceMemberImplementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Reorder Parameters ähnelt.
        /// </summary>
        public static string ReorderParamsDialog_Caption {
            get {
                return ResourceManager.GetString("ReorderParamsDialog_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a parameter and drag it or use buttons to move it up or down. ähnelt.
        /// </summary>
        public static string ReorderParamsDialog_InstructionsLabelText {
            get {
                return ResourceManager.GetString("ReorderParamsDialog_InstructionsLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move down ähnelt.
        /// </summary>
        public static string ReorderParamsDialog_MoveDownButtonText {
            get {
                return ResourceManager.GetString("ReorderParamsDialog_MoveDownButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move up ähnelt.
        /// </summary>
        public static string ReorderParamsDialog_MoveUpButtonText {
            get {
                return ResourceManager.GetString("ReorderParamsDialog_MoveUpButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reorder parameters ähnelt.
        /// </summary>
        public static string ReorderParamsDialog_TitleText {
            get {
                return ResourceManager.GetString("ReorderParamsDialog_TitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Less than two parameters in method &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string ReorderPresenter_LessThanTwoParametersError {
            get {
                return ResourceManager.GetString("ReorderPresenter_LessThanTwoParametersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Optional parameters must be specified at the end of the parameter list. ähnelt.
        /// </summary>
        public static string ReorderPresenter_OptionalParametersMustBeLastError {
            get {
                return ResourceManager.GetString("ReorderPresenter_OptionalParametersMustBeLastError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ParamArray parameter must be specified last. ähnelt.
        /// </summary>
        public static string ReorderPresenter_ParamArrayError {
            get {
                return ResourceManager.GetString("ReorderPresenter_ParamArrayError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolving... ähnelt.
        /// </summary>
        public static string ResolutionProgress {
            get {
                return ResourceManager.GetString("ResolutionProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restore ähnelt.
        /// </summary>
        public static string Restore {
            get {
                return ResourceManager.GetString("Restore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Result ähnelt.
        /// </summary>
        public static string Result {
            get {
                return ResourceManager.GetString("Result", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Build {0} ({1}) ähnelt.
        /// </summary>
        public static string Rubberduck_AboutBuild {
            get {
                return ResourceManager.GetString("Rubberduck_AboutBuild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck Add-In could not be loaded ähnelt.
        /// </summary>
        public static string RubberduckLoadFailure {
            get {
                return ResourceManager.GetString("RubberduckLoadFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ru&amp;bberduck ähnelt.
        /// </summary>
        public static string RubberduckMenu {
            get {
                return ResourceManager.GetString("RubberduckMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;About... ähnelt.
        /// </summary>
        public static string RubberduckMenu_About {
            get {
                return ResourceManager.GetString("RubberduckMenu_About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Code Explorer ähnelt.
        /// </summary>
        public static string RubberduckMenu_CodeExplorer {
            get {
                return ResourceManager.GetString("RubberduckMenu_CodeExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code &amp;Inspections ähnelt.
        /// </summary>
        public static string RubberduckMenu_CodeInspections {
            get {
                return ResourceManager.GetString("RubberduckMenu_CodeInspections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Na&amp;vigate ähnelt.
        /// </summary>
        public static string RubberduckMenu_Navigate {
            get {
                return ResourceManager.GetString("RubberduckMenu_Navigate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Options ähnelt.
        /// </summary>
        public static string RubberduckMenu_Options {
            get {
                return ResourceManager.GetString("RubberduckMenu_Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Refactor ähnelt.
        /// </summary>
        public static string RubberduckMenu_Refactor {
            get {
                return ResourceManager.GetString("RubberduckMenu_Refactor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Source Control ähnelt.
        /// </summary>
        public static string RubberduckMenu_SourceControl {
            get {
                return ResourceManager.GetString("RubberduckMenu_SourceControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die To&amp;Do Items ähnelt.
        /// </summary>
        public static string RubberduckMenu_ToDoItems {
            get {
                return ResourceManager.GetString("RubberduckMenu_ToDoItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unit &amp;Tests ähnelt.
        /// </summary>
        public static string RubberduckMenu_UnitTests {
            get {
                return ResourceManager.GetString("RubberduckMenu_UnitTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run ähnelt.
        /// </summary>
        public static string Run {
            get {
                return ResourceManager.GetString("Run", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck Settings ähnelt.
        /// </summary>
        public static string Settings_Caption {
            get {
                return ResourceManager.GetString("Settings_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display language: ähnelt.
        /// </summary>
        public static string Settings_LanguageLabel {
            get {
                return ResourceManager.GetString("Settings_LanguageLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reset ähnelt.
        /// </summary>
        public static string Settings_ResetSettings {
            get {
                return ResourceManager.GetString("Settings_ResetSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reset settings to default configuration? ähnelt.
        /// </summary>
        public static string Settings_ResetSettingsConfirmation {
            get {
                return ResourceManager.GetString("Settings_ResetSettingsConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code Inspection Settings ähnelt.
        /// </summary>
        public static string SettingsCaption_CodeInspections {
            get {
                return ResourceManager.GetString("SettingsCaption_CodeInspections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General Settings ähnelt.
        /// </summary>
        public static string SettingsCaption_GeneralSettings {
            get {
                return ResourceManager.GetString("SettingsCaption_GeneralSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ToDo Settings ähnelt.
        /// </summary>
        public static string SettingsCaption_ToDoSettings {
            get {
                return ResourceManager.GetString("SettingsCaption_ToDoSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure inspection severity. Use &quot;DoNotShow&quot; to disable an inspection. ähnelt.
        /// </summary>
        public static string SettingsInstructions_CodeInspections {
            get {
                return ResourceManager.GetString("SettingsInstructions_CodeInspections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click [Ok] to close the window and apply changes, or [Cancel] to discard them. ähnelt.
        /// </summary>
        public static string SettingsInstructions_GeneralSettings {
            get {
                return ResourceManager.GetString("SettingsInstructions_GeneralSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure markers to be recognized in comments. ähnelt.
        /// </summary>
        public static string SettingsInstructions_ToDoSettings {
            get {
                return ResourceManager.GetString("SettingsInstructions_ToDoSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Severity ähnelt.
        /// </summary>
        public static string Severity {
            get {
                return ResourceManager.GetString("Severity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attributes File ähnelt.
        /// </summary>
        public static string SourceControl_AttributesFile {
            get {
                return ResourceManager.GetString("SourceControl_AttributesFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Branches ähnelt.
        /// </summary>
        public static string SourceControl_Branches {
            get {
                return ResourceManager.GetString("SourceControl_Branches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel ähnelt.
        /// </summary>
        public static string SourceControl_CancelGlobalSettings {
            get {
                return ResourceManager.GetString("SourceControl_CancelGlobalSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changes ähnelt.
        /// </summary>
        public static string SourceControl_Changes {
            get {
                return ResourceManager.GetString("SourceControl_Changes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Commit ähnelt.
        /// </summary>
        public static string SourceControl_Commit {
            get {
                return ResourceManager.GetString("SourceControl_Commit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Go ähnelt.
        /// </summary>
        public static string SourceControl_CommitButtonLabel {
            get {
                return ResourceManager.GetString("SourceControl_CommitButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Commit message: ähnelt.
        /// </summary>
        public static string SourceControl_CommitMessageLabel {
            get {
                return ResourceManager.GetString("SourceControl_CommitMessageLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Commit and Push ähnelt.
        /// </summary>
        public static string SourceControl_CommitPush {
            get {
                return ResourceManager.GetString("SourceControl_CommitPush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Commit and Sync ähnelt.
        /// </summary>
        public static string SourceControl_CommitSync {
            get {
                return ResourceManager.GetString("SourceControl_CommitSync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Create Branch ähnelt.
        /// </summary>
        public static string SourceControl_CreateNewBranchCaption {
            get {
                return ResourceManager.GetString("SourceControl_CreateNewBranchCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please specify branch name. ähnelt.
        /// </summary>
        public static string SourceControl_CreateNewBranchInstructions {
            get {
                return ResourceManager.GetString("SourceControl_CreateNewBranchInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New branch ähnelt.
        /// </summary>
        public static string SourceControl_CreateNewBranchTitle {
            get {
                return ResourceManager.GetString("SourceControl_CreateNewBranchTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create New Repository ähnelt.
        /// </summary>
        public static string SourceControl_CreateNewRepo {
            get {
                return ResourceManager.GetString("SourceControl_CreateNewRepo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Branch: ähnelt.
        /// </summary>
        public static string SourceControl_CurrentBranchLabel {
            get {
                return ResourceManager.GetString("SourceControl_CurrentBranchLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default Repository Location ähnelt.
        /// </summary>
        public static string SourceControl_DefaultRepoLocationLabel {
            get {
                return ResourceManager.GetString("SourceControl_DefaultRepoLocationLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Delete Branch ähnelt.
        /// </summary>
        public static string SourceControl_DeleteBranchCaption {
            get {
                return ResourceManager.GetString("SourceControl_DeleteBranchCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please specify branch name. ähnelt.
        /// </summary>
        public static string SourceControl_DeleteBranchInstructionsLabel {
            get {
                return ResourceManager.GetString("SourceControl_DeleteBranchInstructionsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete branch ähnelt.
        /// </summary>
        public static string SourceControl_DeleteBranchTitleLable {
            get {
                return ResourceManager.GetString("SourceControl_DeleteBranchTitleLable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destination ähnelt.
        /// </summary>
        public static string SourceControl_DestinationLabel {
            get {
                return ResourceManager.GetString("SourceControl_DestinationLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Email Address ähnelt.
        /// </summary>
        public static string SourceControl_EmailAddressLabel {
            get {
                return ResourceManager.GetString("SourceControl_EmailAddressLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Excluded changes ähnelt.
        /// </summary>
        public static string SourceControl_ExcludedChanges {
            get {
                return ResourceManager.GetString("SourceControl_ExcludedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fetch ähnelt.
        /// </summary>
        public static string SourceControl_FetchCommitsLabel {
            get {
                return ResourceManager.GetString("SourceControl_FetchCommitsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Global Settings ähnelt.
        /// </summary>
        public static string SourceControl_GlobalSettings {
            get {
                return ResourceManager.GetString("SourceControl_GlobalSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ignore File ähnelt.
        /// </summary>
        public static string SourceControl_IgnoreFile {
            get {
                return ResourceManager.GetString("SourceControl_IgnoreFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Included changes ähnelt.
        /// </summary>
        public static string SourceControl_IncludedChanges {
            get {
                return ResourceManager.GetString("SourceControl_IncludedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Incoming commits ähnelt.
        /// </summary>
        public static string SourceControl_IncomingCommits {
            get {
                return ResourceManager.GetString("SourceControl_IncomingCommits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Init New Repo from this Project ähnelt.
        /// </summary>
        public static string SourceControl_InitRepoButtonToolTip {
            get {
                return ResourceManager.GetString("SourceControl_InitRepoButtonToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Merge ähnelt.
        /// </summary>
        public static string SourceControl_MergeBranch {
            get {
                return ResourceManager.GetString("SourceControl_MergeBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Merge ähnelt.
        /// </summary>
        public static string SourceControl_MergeFormCaption {
            get {
                return ResourceManager.GetString("SourceControl_MergeFormCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please select source and destination branches. ähnelt.
        /// </summary>
        public static string SourceControl_MergeFormInstructions {
            get {
                return ResourceManager.GetString("SourceControl_MergeFormInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Merge branches ähnelt.
        /// </summary>
        public static string SourceControl_MergeFormTitle {
            get {
                return ResourceManager.GetString("SourceControl_MergeFormTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Branch ähnelt.
        /// </summary>
        public static string SourceControl_NewBranch {
            get {
                return ResourceManager.GetString("SourceControl_NewBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No repository found. ähnelt.
        /// </summary>
        public static string SourceControl_NoRepoFound {
            get {
                return ResourceManager.GetString("SourceControl_NoRepoFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open Working Directory ähnelt.
        /// </summary>
        public static string SourceControl_OpenWorkingDirectory {
            get {
                return ResourceManager.GetString("SourceControl_OpenWorkingDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open Working Directory ähnelt.
        /// </summary>
        public static string SourceControl_OpenWorkingFolderToolTip {
            get {
                return ResourceManager.GetString("SourceControl_OpenWorkingFolderToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Outgoing commits ähnelt.
        /// </summary>
        public static string SourceControl_OutgoingCommits {
            get {
                return ResourceManager.GetString("SourceControl_OutgoingCommits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Published Branches ähnelt.
        /// </summary>
        public static string SourceControl_PublishedBranchesLabel {
            get {
                return ResourceManager.GetString("SourceControl_PublishedBranchesLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pull ähnelt.
        /// </summary>
        public static string SourceControl_PullCommitsLabel {
            get {
                return ResourceManager.GetString("SourceControl_PullCommitsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Push ähnelt.
        /// </summary>
        public static string SourceControl_PushCommitsLabel {
            get {
                return ResourceManager.GetString("SourceControl_PushCommitsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refreshes pending changes ähnelt.
        /// </summary>
        public static string SourceControl_RefreshButtonToolTip {
            get {
                return ResourceManager.GetString("SourceControl_RefreshButtonToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Repository Settings ähnelt.
        /// </summary>
        public static string SourceControl_RespositorySettings {
            get {
                return ResourceManager.GetString("SourceControl_RespositorySettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        public static string SourceControl_Settings {
            get {
                return ResourceManager.GetString("SourceControl_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Source ähnelt.
        /// </summary>
        public static string SourceControl_SourceLabel {
            get {
                return ResourceManager.GetString("SourceControl_SourceLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Successfully Merged {0} into {1} ähnelt.
        /// </summary>
        public static string SourceControl_SuccessfulMerge {
            get {
                return ResourceManager.GetString("SourceControl_SuccessfulMerge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sync ähnelt.
        /// </summary>
        public static string SourceControl_SyncCommitsLabel {
            get {
                return ResourceManager.GetString("SourceControl_SyncCommitsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unpublished Branches ähnelt.
        /// </summary>
        public static string SourceControl_UnpublishedBranchesLabel {
            get {
                return ResourceManager.GetString("SourceControl_UnpublishedBranchesLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unsynced commits ähnelt.
        /// </summary>
        public static string SourceControl_UnsyncedCommits {
            get {
                return ResourceManager.GetString("SourceControl_UnsyncedCommits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Untracked files ähnelt.
        /// </summary>
        public static string SourceControl_UntrackedFiles {
            get {
                return ResourceManager.GetString("SourceControl_UntrackedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update ähnelt.
        /// </summary>
        public static string SourceControl_UpdateGlobalSettings {
            get {
                return ResourceManager.GetString("SourceControl_UpdateGlobalSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die User Name ähnelt.
        /// </summary>
        public static string SourceControl_UserNameLabel {
            get {
                return ResourceManager.GetString("SourceControl_UserNameLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Source Control ähnelt.
        /// </summary>
        public static string SourceControlPanel_Caption {
            get {
                return ResourceManager.GetString("SourceControlPanel_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add ähnelt.
        /// </summary>
        public static string TestExplorer_AddButtonText {
            get {
                return ResourceManager.GetString("TestExplorer_AddButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test Method (Expected Error) ähnelt.
        /// </summary>
        public static string TestExplorer_AddExpectedErrorTestMethod {
            get {
                return ResourceManager.GetString("TestExplorer_AddExpectedErrorTestMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test Method ähnelt.
        /// </summary>
        public static string TestExplorer_AddTestMethod {
            get {
                return ResourceManager.GetString("TestExplorer_AddTestMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test Module ähnelt.
        /// </summary>
        public static string TestExplorer_AddTestModule {
            get {
                return ResourceManager.GetString("TestExplorer_AddTestModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duration ähnelt.
        /// </summary>
        public static string TestExplorer_Duration {
            get {
                return ResourceManager.GetString("TestExplorer_Duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Navigate to selected ähnelt.
        /// </summary>
        public static string TestExplorer_GotoSelectionToolTip {
            get {
                return ResourceManager.GetString("TestExplorer_GotoSelectionToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Message ähnelt.
        /// </summary>
        public static string TestExplorer_Message {
            get {
                return ResourceManager.GetString("TestExplorer_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Method Name ähnelt.
        /// </summary>
        public static string TestExplorer_MethodName {
            get {
                return ResourceManager.GetString("TestExplorer_MethodName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Qualified Member Name ähnelt.
        /// </summary>
        public static string TestExplorer_QualifiedMemberName {
            get {
                return ResourceManager.GetString("TestExplorer_QualifiedMemberName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Tests ähnelt.
        /// </summary>
        public static string TestExplorer_RunAllTests {
            get {
                return ResourceManager.GetString("TestExplorer_RunAllTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run ähnelt.
        /// </summary>
        public static string TestExplorer_RunButtonText {
            get {
                return ResourceManager.GetString("TestExplorer_RunButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed Tests ähnelt.
        /// </summary>
        public static string TestExplorer_RunFailedTests {
            get {
                return ResourceManager.GetString("TestExplorer_RunFailedTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Repeat Last Run ähnelt.
        /// </summary>
        public static string TestExplorer_RunLastRunTests {
            get {
                return ResourceManager.GetString("TestExplorer_RunLastRunTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not Run Tests ähnelt.
        /// </summary>
        public static string TestExplorer_RunNotRunTests {
            get {
                return ResourceManager.GetString("TestExplorer_RunNotRunTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Passed Tests ähnelt.
        /// </summary>
        public static string TestExplorer_RunPassedTests {
            get {
                return ResourceManager.GetString("TestExplorer_RunPassedTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selected Tests ähnelt.
        /// </summary>
        public static string TestExplorer_RunSelectedTests {
            get {
                return ResourceManager.GetString("TestExplorer_RunSelectedTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} Failed ähnelt.
        /// </summary>
        public static string TestExplorer_TestNumberFailed {
            get {
                return ResourceManager.GetString("TestExplorer_TestNumberFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} Inconclusive ähnelt.
        /// </summary>
        public static string TestExplorer_TestNumberInconclusive {
            get {
                return ResourceManager.GetString("TestExplorer_TestNumberInconclusive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} Passed ähnelt.
        /// </summary>
        public static string TestExplorer_TestNumberPassed {
            get {
                return ResourceManager.GetString("TestExplorer_TestNumberPassed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Two or more projects containing test methods have the same name and identically named tests. Please rename one to continue. ähnelt.
        /// </summary>
        public static string TestExplorerDockablePresenter_MultipleTestsSameNameError {
            get {
                return ResourceManager.GetString("TestExplorerDockablePresenter_MultipleTestsSameNameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test Explorer ähnelt.
        /// </summary>
        public static string TestExplorerWindow_Caption {
            get {
                return ResourceManager.GetString("TestExplorerWindow_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Run All Tests ähnelt.
        /// </summary>
        public static string TestMenu_RunAllTests {
            get {
                return ResourceManager.GetString("TestMenu_RunAllTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Test Explorer ähnelt.
        /// </summary>
        public static string TestMenu_TextExplorer {
            get {
                return ResourceManager.GetString("TestMenu_TextExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ToDo Explorer ähnelt.
        /// </summary>
        public static string ToDoExplorer_Caption {
            get {
                return ResourceManager.GetString("ToDoExplorer_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Description ähnelt.
        /// </summary>
        public static string TodoExplorer_Description {
            get {
                return ResourceManager.GetString("TodoExplorer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Line Number ähnelt.
        /// </summary>
        public static string TodoExplorer_LineNumber {
            get {
                return ResourceManager.GetString("TodoExplorer_LineNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die BUG: ähnelt.
        /// </summary>
        public static string ToDoMarkerBug {
            get {
                return ResourceManager.GetString("ToDoMarkerBug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NOTE: ähnelt.
        /// </summary>
        public static string ToDoMarkerNote {
            get {
                return ResourceManager.GetString("ToDoMarkerNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TODO: ähnelt.
        /// </summary>
        public static string ToDoMarkerToDo {
            get {
                return ResourceManager.GetString("ToDoMarkerToDo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die High ähnelt.
        /// </summary>
        public static string ToDoPriority_High {
            get {
                return ResourceManager.GetString("ToDoPriority_High", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Low ähnelt.
        /// </summary>
        public static string ToDoPriority_Low {
            get {
                return ResourceManager.GetString("ToDoPriority_Low", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Medium ähnelt.
        /// </summary>
        public static string ToDoPriority_Medium {
            get {
                return ResourceManager.GetString("ToDoPriority_Medium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die To-Do Explorer ähnelt.
        /// </summary>
        public static string TodoSettings_Caption {
            get {
                return ResourceManager.GetString("TodoSettings_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Priority ähnelt.
        /// </summary>
        public static string TodoSettings_Priority {
            get {
                return ResourceManager.GetString("TodoSettings_Priority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Priority: ähnelt.
        /// </summary>
        public static string TodoSettings_PriorityLabel {
            get {
                return ResourceManager.GetString("TodoSettings_PriorityLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text ähnelt.
        /// </summary>
        public static string TodoSettings_Text {
            get {
                return ResourceManager.GetString("TodoSettings_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text: ähnelt.
        /// </summary>
        public static string TodoSettings_TextLabel {
            get {
                return ResourceManager.GetString("TodoSettings_TextLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Token Text: ähnelt.
        /// </summary>
        public static string TodoSettings_TokenLabel {
            get {
                return ResourceManager.GetString("TodoSettings_TokenLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Token List: ähnelt.
        /// </summary>
        public static string TodoSettings_TokenListLabel {
            get {
                return ResourceManager.GetString("TodoSettings_TokenListLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Type ähnelt.
        /// </summary>
        public static string Type {
            get {
                return ResourceManager.GetString("Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use of unassigned variable &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string UnassignedVariableUsage_ {
            get {
                return ResourceManager.GetString("UnassignedVariableUsage_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use of untyped function &apos;{0}&apos;. String-returning version &apos;{0}$&apos; is available. ähnelt.
        /// </summary>
        public static string UntypedFunctionUsage_ {
            get {
                return ResourceManager.GetString("UntypedFunctionUsage_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable &apos;{0}&apos; is never assigned ähnelt.
        /// </summary>
        public static string VariableNotAssigned_ {
            get {
                return ResourceManager.GetString("VariableNotAssigned_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable &apos;{0}&apos; is never used ähnelt.
        /// </summary>
        public static string VariableNotUsed_ {
            get {
                return ResourceManager.GetString("VariableNotUsed_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning ähnelt.
        /// </summary>
        public static string Warning {
            get {
                return ResourceManager.GetString("Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Property &apos;{0}&apos; has no getter. ähnelt.
        /// </summary>
        public static string WriteOnlyProperty_ {
            get {
                return ResourceManager.GetString("WriteOnlyProperty_", resourceCulture);
            }
        }
    }
}
