<UserControl x:Class="Rubberduck.UI.CodeMetrics.CodeMetricsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:codeMetrics="clr-namespace:Rubberduck.Navigation.CodeMetrics"
             xmlns:controls="clr-namespace:Rubberduck.UI.Controls"
             xmlns:converters="clr-namespace:Rubberduck.UI.Converters"
             ResxExtension.DefaultResxName="Rubberduck.UI.RubberduckUI" 
             Language="{UICulture}"
             Name="CodeMetrics"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" d:DataContext="{d:DesignInstance codeMetrics:CodeMetricsViewModel}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Controls/ToolBar.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <BitmapImage x:Key="RefreshImage" UriSource="../../Resources/arrow-circle-double.png" />
            <BitmapImage x:Key="CollaseNodesImage" UriSource="../../Resources/folder.png" />
            <BitmapImage x:Key="ExpandNodesImage" UriSource="../../Resources/folder-open.png" />
            <BitmapImage x:Key="UndoImage" UriSource="../../Resources/arrow-circle-left.png" />
            <BitmapImage x:Key="PrintImage" UriSource="../../Resources/printer.png" />
            <BitmapImage x:Key="SearchImage" UriSource="../../Resources/magnifier-medium.png" />

            <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
            <converters:BoolToHiddenVisibilityConverter x:Key="BoolToHiddenVisibility" />
            <converters:StringHasValueToVisibilityConverter x:Key="StringHasValueToVisibility" />
            <converters:StringHasNoValueToVisibilityConverter x:Key="StringHasNoValueToVisibility" />

            <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFD9F4FF" Offset="0"/>
                <GradientStop Color="#FF9BDDFB" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="{x:Static SystemColors.ControlBrushKey}" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFEEEDED" Offset="0"/>
                <GradientStop Color="#FFDDDDDD" Offset="1"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />

            <Style x:Key="XButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Content" Value="✕"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="PaleGoldenrod"/>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="PaleGoldenrod"/>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="Background" CornerRadius="3" Background="White" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                    <Grid Background="{TemplateBinding Background}"  Margin="1">
                                        <Border Opacity="0" x:Name="BackgroundAnimation" Background="PaleGoldenrod" />
                                    </Grid>
                                </Border>
                                <ContentPresenter
                                  x:Name="contentPresenter"
                                  Content="{TemplateBinding Content}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Padding}"/>
                                <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="#FFFFFFFF" Opacity="0" IsHitTestVisible="false" />
                                <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="1" Stroke="PaleGoldenrod" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid UseLayoutRounding="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="*" MinHeight="64" />
        </Grid.RowDefinitions>

        <ToolBarTray Grid.Row="0" IsLocked="True">
            <ToolBar Style="{DynamicResource ToolBarWithOverflowOnlyShowingWhenNeededStyle}">

                <Button Command="{Binding RefreshCommand}">
                    <Image Height="16" Source="../../Resources/arrow-circle-double.png">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled"  Value="False">
                                        <Setter Property="Opacity" Value="0.3" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Button.ToolTip>
                        <TextBlock Text="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=Refresh}" />
                    </Button.ToolTip>
                </Button>
            </ToolBar>
        </ToolBarTray>

        <Border Grid.Row="1" 
                BorderBrush="{StaticResource {x:Static SystemColors.ControlBrushKey}}" 
                BorderThickness="1">
            <Grid>
                <TextBox x:Name="SearchBox"
                         VerticalContentAlignment="Center"
                         IsEnabled="{Binding CanSearch}"
                         MinHeight="20"
                         PreviewKeyDown="SearchBox_OnPreviewKeyDown"
                         TextChanged="SearchBox_OnTextChanged" />
        
                <Image Source="{StaticResource SearchImage}" 
                       HorizontalAlignment="Right" VerticalAlignment="Center" 
                       MaxHeight="16" Margin="0,0,1,0" 
                       IsEnabled="{Binding CanSearch}"
                       Visibility="{Binding ElementName=SearchBox, Path=Text.Length, Converter={StaticResource StringHasValueToVisibility}}"
                       MouseDown="SearchIcon_OnMouseDown" />
        
                <Button Style="{StaticResource XButtonStyle}" 
                        HorizontalAlignment="Right" VerticalAlignment="Center" 
                        Height="18" Width="18" Margin="0,1,1,0" 
                        IsEnabled="{Binding CanSearch}"
                        Visibility="{Binding ElementName=SearchBox, Path=Text.Length, Converter={StaticResource StringHasNoValueToVisibility}}" 
                        Click="ButtonBase_OnClick" />
            </Grid>
        </Border>
        <controls:EmptyUIRefresh Grid.Row="2" />

        <TreeView ItemsSource="{Binding ModuleMetrics}" Grid.Row="2" >
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate>
                    <Grid>
                        <TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding Path=ModuleName}"/>
                        <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding Path=Result.Lines}" />
                        <TextBlock Grid.Column="2" Grid.Row="0" Text="{Binding Path=Result.CyclomaticComplexity}" />
                        <TextBlock Grid.Column="3" Grid.Row="0" Text="{Binding Path=Result.MaximumNesting}" />

                        <ListView Grid.ColumnSpan="4" Grid.Row="1" ItemsSource="{Binding Path=MemberResults}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock Grid.Column="0" Text="{Binding Path=Key}"/>
                                        <TextBlock Grid.Column="1" Text="{Binding Path=Value.Lines}" />
                                        <TextBlock Grid.Column="2" Text="{Binding Path=Value.CyclomaticComplexity}" />
                                        <TextBlock Grid.Column="3" Text="{Binding Path=Value.MaximumNesting}" />
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
        <controls:BusyIndicator Grid.Row="2" Width="120" Height="120" Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibility}}" />
    </Grid>
</UserControl>

