//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Splinter\Documents\Visual Studio 2015\Projects\TestProj\TestProj\VBADate.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Rubberduck.Parsing.Date {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public partial class VBADateLexer : Lexer {
	public const int
		AMPM=1, AM=2, PM=3, HASH=4, COMMA=5, DASH=6, SLASH=7, COLON=8, DOT=9, 
		WS=10, DIGIT=11;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'"
	};
	public static readonly string[] ruleNames = {
		"AMPM", "AM", "PM", "HASH", "COMMA", "DASH", "SLASH", "COLON", "DOT", 
		"WS", "DIGIT", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", 
		"L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", 
		"Z"
	};


	public VBADateLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	public override string GrammarFileName { get { return "VBADate.g4"; } }

	public override string[] TokenNames { get { return tokenNames; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\r\x9D\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x3\x2\x3\x2\x3\x2\x3\x2\x5\x2"+
		"R\n\x2\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3"+
		"\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3"+
		"\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13"+
		"\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x18"+
		"\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1D"+
		"\x3\x1D\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3 \x3 \x3!\x3!\x3\"\x3\"\x3#\x3#"+
		"\x3$\x3$\x3%\x3%\x3&\x3&\x2\x2\x2\'\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6"+
		"\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\x2\x1B"+
		"\x2\x2\x1D\x2\x2\x1F\x2\x2!\x2\x2#\x2\x2%\x2\x2\'\x2\x2)\x2\x2+\x2\x2"+
		"-\x2\x2/\x2\x2\x31\x2\x2\x33\x2\x2\x35\x2\x2\x37\x2\x2\x39\x2\x2;\x2\x2"+
		"=\x2\x2?\x2\x2\x41\x2\x2\x43\x2\x2\x45\x2\x2G\x2\x2I\x2\x2K\x2\x2\x3\x2"+
		"\x1E\x4\x2\v\v\"\"\x3\x2\x32;\x4\x2\x43\x43\x63\x63\x4\x2\x44\x44\x64"+
		"\x64\x4\x2\x45\x45\x65\x65\x4\x2\x46\x46\x66\x66\x4\x2GGgg\x4\x2HHhh\x4"+
		"\x2IIii\x4\x2JJjj\x4\x2KKkk\x4\x2LLll\x4\x2MMmm\x4\x2NNnn\x4\x2OOoo\x4"+
		"\x2PPpp\x4\x2QQqq\x4\x2RRrr\x4\x2SSss\x4\x2TTtt\x4\x2UUuu\x4\x2VVvv\x4"+
		"\x2WWww\x4\x2XXxx\x4\x2YYyy\x4\x2ZZzz\x4\x2[[{{\x4\x2\\\\||\x85\x2\x3"+
		"\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v"+
		"\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2"+
		"\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x3Q\x3\x2\x2\x2"+
		"\x5S\x3\x2\x2\x2\aV\x3\x2\x2\x2\tY\x3\x2\x2\x2\v[\x3\x2\x2\x2\r]\x3\x2"+
		"\x2\x2\xF_\x3\x2\x2\x2\x11\x61\x3\x2\x2\x2\x13\x63\x3\x2\x2\x2\x15\x65"+
		"\x3\x2\x2\x2\x17g\x3\x2\x2\x2\x19i\x3\x2\x2\x2\x1Bk\x3\x2\x2\x2\x1Dm\x3"+
		"\x2\x2\x2\x1Fo\x3\x2\x2\x2!q\x3\x2\x2\x2#s\x3\x2\x2\x2%u\x3\x2\x2\x2\'"+
		"w\x3\x2\x2\x2)y\x3\x2\x2\x2+{\x3\x2\x2\x2-}\x3\x2\x2\x2/\x7F\x3\x2\x2"+
		"\x2\x31\x81\x3\x2\x2\x2\x33\x83\x3\x2\x2\x2\x35\x85\x3\x2\x2\x2\x37\x87"+
		"\x3\x2\x2\x2\x39\x89\x3\x2\x2\x2;\x8B\x3\x2\x2\x2=\x8D\x3\x2\x2\x2?\x8F"+
		"\x3\x2\x2\x2\x41\x91\x3\x2\x2\x2\x43\x93\x3\x2\x2\x2\x45\x95\x3\x2\x2"+
		"\x2G\x97\x3\x2\x2\x2I\x99\x3\x2\x2\x2K\x9B\x3\x2\x2\x2MR\x5\x5\x3\x2N"+
		"R\x5\a\x4\x2OR\x5\x19\r\x2PR\x5\x37\x1C\x2QM\x3\x2\x2\x2QN\x3\x2\x2\x2"+
		"QO\x3\x2\x2\x2QP\x3\x2\x2\x2R\x4\x3\x2\x2\x2ST\x5\x19\r\x2TU\x5\x31\x19"+
		"\x2U\x6\x3\x2\x2\x2VW\x5\x37\x1C\x2WX\x5\x31\x19\x2X\b\x3\x2\x2\x2YZ\a"+
		"%\x2\x2Z\n\x3\x2\x2\x2[\\\a.\x2\x2\\\f\x3\x2\x2\x2]^\a/\x2\x2^\xE\x3\x2"+
		"\x2\x2_`\a\x31\x2\x2`\x10\x3\x2\x2\x2\x61\x62\a<\x2\x2\x62\x12\x3\x2\x2"+
		"\x2\x63\x64\a\x30\x2\x2\x64\x14\x3\x2\x2\x2\x65\x66\t\x2\x2\x2\x66\x16"+
		"\x3\x2\x2\x2gh\t\x3\x2\x2h\x18\x3\x2\x2\x2ij\t\x4\x2\x2j\x1A\x3\x2\x2"+
		"\x2kl\t\x5\x2\x2l\x1C\x3\x2\x2\x2mn\t\x6\x2\x2n\x1E\x3\x2\x2\x2op\t\a"+
		"\x2\x2p \x3\x2\x2\x2qr\t\b\x2\x2r\"\x3\x2\x2\x2st\t\t\x2\x2t$\x3\x2\x2"+
		"\x2uv\t\n\x2\x2v&\x3\x2\x2\x2wx\t\v\x2\x2x(\x3\x2\x2\x2yz\t\f\x2\x2z*"+
		"\x3\x2\x2\x2{|\t\r\x2\x2|,\x3\x2\x2\x2}~\t\xE\x2\x2~.\x3\x2\x2\x2\x7F"+
		"\x80\t\xF\x2\x2\x80\x30\x3\x2\x2\x2\x81\x82\t\x10\x2\x2\x82\x32\x3\x2"+
		"\x2\x2\x83\x84\t\x11\x2\x2\x84\x34\x3\x2\x2\x2\x85\x86\t\x12\x2\x2\x86"+
		"\x36\x3\x2\x2\x2\x87\x88\t\x13\x2\x2\x88\x38\x3\x2\x2\x2\x89\x8A\t\x14"+
		"\x2\x2\x8A:\x3\x2\x2\x2\x8B\x8C\t\x15\x2\x2\x8C<\x3\x2\x2\x2\x8D\x8E\t"+
		"\x16\x2\x2\x8E>\x3\x2\x2\x2\x8F\x90\t\x17\x2\x2\x90@\x3\x2\x2\x2\x91\x92"+
		"\t\x18\x2\x2\x92\x42\x3\x2\x2\x2\x93\x94\t\x19\x2\x2\x94\x44\x3\x2\x2"+
		"\x2\x95\x96\t\x1A\x2\x2\x96\x46\x3\x2\x2\x2\x97\x98\t\x1B\x2\x2\x98H\x3"+
		"\x2\x2\x2\x99\x9A\t\x1C\x2\x2\x9AJ\x3\x2\x2\x2\x9B\x9C\t\x1D\x2\x2\x9C"+
		"L\x3\x2\x2\x2\x4\x2Q\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Rubberduck.Parsing.Date
